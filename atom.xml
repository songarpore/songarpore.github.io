<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>songjiapo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://songjiapo.com/"/>
  <updated>2019-11-08T12:50:25.585Z</updated>
  <id>https://songjiapo.com/</id>
  
  <author>
    <name>song jiapo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PyCharm中设置python活动模板（live templates）</title>
    <link href="https://songjiapo.com/python/pycharm%20live%20templates.html"/>
    <id>https://songjiapo.com/python/pycharm%20live%20templates.html</id>
    <published>2019-02-01T03:08:12.000Z</published>
    <updated>2019-11-08T12:50:25.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="live-templates活动模板设置"><a href="#live-templates活动模板设置" class="headerlink" title="live templates活动模板设置"></a>live templates活动模板设置</h1><p>在<code>pycharm</code>中打开<code>Preferences</code>，搜索 <code>live</code> , 点击搜索结果中的<code>live templates</code>,选中 <code>python</code>，点击 加号并选中<code>live templates</code>, 点击OK</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/live%20templates.png"></p><p>输入 <code>qqt</code>及 <code>pyqt5</code>的代码结构，及<code>templates text</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># step0 导入需要的包</span><br><span class="line">from PyQt5.Qt import *</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># step1  创建应用程序</span><br><span class="line">app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># step2 控件操作</span><br><span class="line">## 2.1 创建控件</span><br><span class="line">window = QWidget()</span><br><span class="line"></span><br><span class="line">## 2.2 设置控件：（尺寸，位置，样式） ,事件，信号的处理</span><br><span class="line">window.setWindowTitle(&quot;$title$&quot;)</span><br><span class="line"></span><br><span class="line">window.resize(500,500)</span><br><span class="line"></span><br><span class="line">$code$</span><br><span class="line"></span><br><span class="line">## 2.3 展示控件</span><br><span class="line">window.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># step3  应用程序的执行，进入到消息循环</span><br><span class="line"></span><br><span class="line">sys.exit(app.exec_())</span><br></pre></td></tr></table></figure></p><p>并在<code>change</code>处选中<code>Python</code>,点击<code>apply</code><br><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/live%20templates%202.png"></p><h1 id="live-templates-使用"><a href="#live-templates-使用" class="headerlink" title="live templates 使用"></a>live templates 使用</h1><p>在任意处输入qqt任何按 <code>tab</code>键，就能自动补全为设置的模板了，哈哈，可以减少很多重复性的键盘操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;live-templates活动模板设置&quot;&gt;&lt;a href=&quot;#live-templates活动模板设置&quot; class=&quot;headerlink&quot; title=&quot;live templates活动模板设置&quot;&gt;&lt;/a&gt;live templates活动模板设置&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="python" scheme="https://songjiapo.com/categories/python/"/>
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="pycharm" scheme="https://songjiapo.com/tags/pycharm/"/>
    
      <category term="live templates" scheme="https://songjiapo.com/tags/live-templates/"/>
    
  </entry>
  
  <entry>
    <title>mac下搭建pycharm + python + PyQt5 + pipenv 开发环境配置</title>
    <link href="https://songjiapo.com/python/mac%E4%B8%8Bpycharm%20+%20python3.6%20+%20PyQt5.html"/>
    <id>https://songjiapo.com/python/mac%E4%B8%8Bpycharm%20+%20python3.6%20+%20PyQt5.html</id>
    <published>2019-01-31T03:08:12.000Z</published>
    <updated>2019-11-08T12:50:25.588Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录本人在 mac下搭建pycharm + python + PyQt5 + pipenv 开发环境，仅供参考。</p><h1 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h1><h2 id="python3-x"><a href="#python3-x" class="headerlink" title="python3.x"></a>python3.x</h2><p>可参考 <a href="https://pythonguidecn.readthedocs.io/zh/latest/starting/install3/osx.html" target="_blank" rel="noopener">在Mac OS X上安装Python 3</a></p><p>安装 Homebrew 只需打开 终端 或个人常用的终端模拟器并运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><p>运行这段脚本将列出它会引起的改变，并在安装开始前提示您。 安装完成<code>Homebrew</code>后，需将其所在路径插入到 PATH 环境变量的最前面，即在您所登录用户的 <code>~/.profile</code> 文件末尾加上这一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/usr/local/opt/python/libexec/bin:$PATH&quot;</span><br></pre></td></tr></table></figure><p>如果您使用的是 OS X 10.12（Sierra）或者更旧的系统，请使用如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/bin:/usr/local/sbin:$PATH</span><br></pre></td></tr></table></figure><p>接下来可以开始安装Python 3：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install python</span><br></pre></td></tr></table></figure></p><p>这将持续几分钟。</p><h2 id="pip包管理工具"><a href="#pip包管理工具" class="headerlink" title="pip包管理工具"></a>pip包管理工具</h2><p>Homebrew 会为您安装 pip3 。</p><p>pip3 是Homebrew版Python 3的 pip 的别名。</p><h2 id="pipenv-虚拟环境管理工具"><a href="#pipenv-虚拟环境管理工具" class="headerlink" title="pipenv 虚拟环境管理工具"></a>pipenv 虚拟环境管理工具</h2><p>Pipenv 是 Python 项目的依赖管理器。如果您熟悉 Node.js 的 npm 或 Ruby 的 bundler，那么它们在思路上与这些工具类似。尽管 pip 可以安装 Python 包， 但仍推荐使用 Pipenv，因为它是一种更高级的工具，可简化依赖关系管理的常见使用情况。</p><p>使用 pip 来安装 Pipenv：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install --user pipenv</span><br></pre></td></tr></table></figure></p><h3 id="为您的项目安装包"><a href="#为您的项目安装包" class="headerlink" title="为您的项目安装包"></a>为您的项目安装包</h3><p>Pipenv 管理每个项目的依赖关系。要安装软件包时，请更改到您的项目目录（或只是本教程中的 一个空目录）并运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir pyqt5</span><br><span class="line">$ cd pyqt5</span><br><span class="line">$ pipenv install pyqt5</span><br></pre></td></tr></table></figure></p><p>pipenv详细教程见<a href="https://songjiapo.com/python/pipenv.html">pipenv–基于项目的虚拟环境管理</a></p><h1 id="GUI开发环境"><a href="#GUI开发环境" class="headerlink" title="GUI开发环境"></a>GUI开发环境</h1><h2 id="虚拟环境安装"><a href="#虚拟环境安装" class="headerlink" title="虚拟环境安装"></a>虚拟环境安装</h2><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir pyqt5</span><br><span class="line">$ cd pyqt5</span><br><span class="line">$ pipenv install --three</span><br></pre></td></tr></table></figure><h3 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a>修改镜像</h3><p>编辑pyqt5文件夹中的Pipfile文件，修改链接为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = &quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span><br></pre></td></tr></table></figure></p><h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pipenv shell</span><br></pre></td></tr></table></figure><h3 id="安装三方库"><a href="#安装三方库" class="headerlink" title="安装三方库"></a>安装三方库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pipenv install pyqt5</span><br><span class="line">$ pipenv install pyqt5-tools</span><br></pre></td></tr></table></figure><h1 id="IDE-pycharm配置"><a href="#IDE-pycharm配置" class="headerlink" title="IDE:pycharm配置"></a>IDE:pycharm配置</h1><p>在pycharm中open我们新建的 pyqt5文件夹，点击<code>preferences</code>, 点击 <code>project interpreter</code> ，点击 <code>add</code>,点击 <code>virtualenv environment</code> 设置为 <code>python3</code>解释器。</p><h1 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h1><p>创建一个简单的 main.py 文件来使用它<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from PyQt5 import *</span><br></pre></td></tr></table></figure></p><p>直接在pycharm中运行，或者使用 pipenv run 运行这段脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pipenv run python main.py</span><br></pre></td></tr></table></figure></p><p>没有报错代表pycharm + python + PyQt5 + pipenv 开发环境配置成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要记录本人在 mac下搭建pycharm + python + PyQt5 + pipenv 开发环境，仅供参考。&lt;/p&gt;
&lt;h1 id=&quot;基本环境&quot;&gt;&lt;a href=&quot;#基本环境&quot; class=&quot;headerlink&quot; title=&quot;基本环境&quot;&gt;&lt;/a&gt;基本环境&lt;/
      
    
    </summary>
    
    
      <category term="python" scheme="https://songjiapo.com/categories/python/"/>
    
    
      <category term="pyqt5" scheme="https://songjiapo.com/tags/pyqt5/"/>
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="pip" scheme="https://songjiapo.com/tags/pip/"/>
    
      <category term="pipenv" scheme="https://songjiapo.com/tags/pipenv/"/>
    
      <category term="pycharm" scheme="https://songjiapo.com/tags/pycharm/"/>
    
  </entry>
  
  <entry>
    <title>pipenv--基于项目的虚拟环境管理</title>
    <link href="https://songjiapo.com/python/pipenv.html"/>
    <id>https://songjiapo.com/python/pipenv.html</id>
    <published>2019-01-28T03:08:12.000Z</published>
    <updated>2019-11-08T12:50:39.806Z</updated>
    
    <content type="html"><![CDATA[<p><code>pipenv</code>相当于<code>pip+virtualenv</code>,可是使得我们更加关注于项目的管理；其优势是不需要再分别使用<code>pip</code>和<code>virtualenv</code>，只需直接使用<code>pipenv</code>即可，<code>pipenv</code>会自动帮你创建虚拟环境，以及安装三方库，也会自动的记录你项目依赖的所有三方库，其使用<code>pipfile</code>和<code>pipifile.lock</code>取代了<code>requiredments.txt</code></p><h1 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install pipenv</span></span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>pipenv 具有的选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ pipenv</span><br><span class="line">Usage: pipenv [OPTIONS] COMMAND [ARGS]...</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --where          显示项目文件所在路径</span><br><span class="line">  --venv           显示虚拟环境实际文件所在路径</span><br><span class="line">  --py             显示虚拟环境Python解释器所在路径</span><br><span class="line">  --envs           显示虚拟环境的选项变量</span><br><span class="line">  --rm             删除虚拟环境</span><br><span class="line">  --bare           最小化输出</span><br><span class="line">  --completion     完整输出</span><br><span class="line">  --man            显示帮助页面</span><br><span class="line">  --three / --two  使用Python 3/2创建虚拟环境（注意本机已安装的Python版本）</span><br><span class="line">  --python TEXT    指定某个Python版本作为虚拟环境的安装源</span><br><span class="line">  --site-packages  附带安装原Python解释器中的第三方库</span><br><span class="line">  --jumbotron      An easter egg, effectively.</span><br><span class="line">  --version        版本信息</span><br><span class="line">  -h, --help       帮助信息</span><br></pre></td></tr></table></figure></p><p>pipenv 可使用的命令参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Commands:</span><br><span class="line">  check      检查安全漏洞</span><br><span class="line">  graph      显示当前依赖关系图信息</span><br><span class="line">  install    安装虚拟环境或者第三方库</span><br><span class="line">  lock       锁定并生成Pipfile.lock文件</span><br><span class="line">  open       在编辑器中查看一个库</span><br><span class="line">  run        在虚拟环境中运行命令</span><br><span class="line">  shell      进入虚拟环境</span><br><span class="line">  uninstall  卸载一个库</span><br><span class="line">  update     卸载当前所有的包，并安装它们的最新版本</span><br></pre></td></tr></table></figure></p><p>一些例子：<br>Usage Examples:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Create a new project using Python 3.6, specifically:</span><br><span class="line">$ pipenv --python 3.6</span><br><span class="line"></span><br><span class="line">Install all dependencies for a project (including dev):</span><br><span class="line">$ pipenv install --dev</span><br><span class="line"></span><br><span class="line">Create a lockfile containing pre-releases:</span><br><span class="line">$ pipenv lock --pre</span><br><span class="line"></span><br><span class="line">Show a graph of your installed dependencies:</span><br><span class="line">$ pipenv graph</span><br><span class="line"></span><br><span class="line">Check your installed dependencies for security vulnerabilities:</span><br><span class="line">$ pipenv check</span><br><span class="line"></span><br><span class="line">Install a local setup.py into your virtual environment/Pipfile:</span><br><span class="line">$ pipenv install -e .</span><br><span class="line"></span><br><span class="line">Use a lower-level pip command:</span><br><span class="line">$ pipenv run pip freeze</span><br></pre></td></tr></table></figure></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>具体使用步骤如下：</p><h2 id="第一步：创建虚拟环境。"><a href="#第一步：创建虚拟环境。" class="headerlink" title="第一步：创建虚拟环境。"></a>第一步：创建虚拟环境。</h2><p>命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> myproject</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pipenv install --three</span></span><br></pre></td></tr></table></figure></p><p>查看相关信息：</p><p>项目位置：　<code>pipenv --where</code></p><p>虚拟环境位置： <code>pipenv --venv</code></p><p>解释器位置： <code>pipenv --py</code></p><h2 id="第二步，激活虚拟环境。"><a href="#第二步，激活虚拟环境。" class="headerlink" title="第二步，激活虚拟环境。"></a>第二步，激活虚拟环境。</h2><p>命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv shell</span><br></pre></td></tr></table></figure></p><h2 id="第三步：该干啥干啥"><a href="#第三步：该干啥干啥" class="headerlink" title="第三步：该干啥干啥"></a>第三步：该干啥干啥</h2><p>下面举几个例子。<br>3.1执行代码 ：<code>python3 xxx.py</code>  //使用虚拟环境</p><p>3.2 安装包：<code>pipenv install [name]</code></p><p>3.3查看包的依赖结构 ：<code>pipenv graph</code></p><p>3.4卸载包 ：<code>pipenv uninstall 包名</code></p><h2 id="第四步：推出虚拟环境"><a href="#第四步：推出虚拟环境" class="headerlink" title="第四步：推出虚拟环境"></a>第四步：推出虚拟环境</h2><p>命令：<code>exit</code></p><p>或者 ctrl+d</p><p>或者直接关闭shell 窗口</p><h2 id="第五步：删除虚拟环境"><a href="#第五步：删除虚拟环境" class="headerlink" title="第五步：删除虚拟环境"></a>第五步：删除虚拟环境</h2><p>命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv --rm</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;pipenv&lt;/code&gt;相当于&lt;code&gt;pip+virtualenv&lt;/code&gt;,可是使得我们更加关注于项目的管理；其优势是不需要再分别使用&lt;code&gt;pip&lt;/code&gt;和&lt;code&gt;virtualenv&lt;/code&gt;，只需直接使用&lt;code&gt;pipen
      
    
    </summary>
    
    
      <category term="python" scheme="https://songjiapo.com/categories/python/"/>
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="pipenv" scheme="https://songjiapo.com/tags/pipenv/"/>
    
  </entry>
  
  <entry>
    <title>udsoncan.Request源码</title>
    <link href="https://songjiapo.com/uds/udsoncan.Request.html"/>
    <id>https://songjiapo.com/uds/udsoncan.Request.html</id>
    <published>2019-01-12T11:50:15.000Z</published>
    <updated>2019-11-08T12:50:25.646Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> udsoncan <span class="keyword">import</span> services</span><br><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Represents a UDS Request.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param service: The service for which to make the request. This parameter must be a class that extends :class:`udsoncan.services.BaseService`</span></span><br><span class="line"><span class="string">:type service: class</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param subfunction: The service subfunction. This value may be ignored if the given service does not supports subfunctions</span></span><br><span class="line"><span class="string">:type subfunction: int or None</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param suppress_positive_response: Indicates that the server should not send a response if the response code is positive. </span></span><br><span class="line"><span class="string">This parameter has effect only when the given service supports subfunctions</span></span><br><span class="line"><span class="string">:type suppress_positive_response: bool</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param data: The service data appended after service ID and payload</span></span><br><span class="line"><span class="string">:type data: bytes</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, service = None, subfunction = None, suppress_positive_response = False, data=None)</span>:</span></span><br><span class="line"><span class="keyword">if</span> service <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">self.service = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">elif</span> isinstance(service, services.BaseService):</span><br><span class="line">self.service = service.__class__</span><br><span class="line"><span class="keyword">elif</span> inspect.isclass(service) <span class="keyword">and</span> issubclass(service, services.BaseService):</span><br><span class="line">self.service = service</span><br><span class="line"><span class="keyword">elif</span> service <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Given service must be a service class or instance"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> isinstance(suppress_positive_response, bool):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"suppress_positive_response must be a boolean value"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> subfunction <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> isinstance(subfunction, int):</span><br><span class="line">self.subfunction = subfunction</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Given subfunction must be a valid integer"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.subfunction = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.service <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> suppress_positive_response <span class="keyword">and</span> self.service.use_subfunction() == <span class="keyword">False</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">'Cannot suppress positive response for service %s. This service does not have a subfunction'</span> % (self.service.get_name()))</span><br><span class="line">self.suppress_positive_response = suppress_positive_response</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> <span class="keyword">not</span> isinstance(data, bytes):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"data must be a valid bytes object"</span>)</span><br><span class="line"></span><br><span class="line">self.data = data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_payload</span><span class="params">(self, suppress_positive_response=None)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Generates a payload to be given to the underlying protocol.</span></span><br><span class="line"><span class="string">This method is meant to be used by a UDS client</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:return: A payload to be sent through the underlying protocol</span></span><br><span class="line"><span class="string">:rtype: bytes</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> issubclass(self.service, services.BaseService):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Cannot generate a payload. Given service is not a subclass of BaseService"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.service.use_subfunction() <span class="keyword">and</span> <span class="keyword">not</span> isinstance(self.subfunction, int):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Cannot generate a payload. Given subfunction is not a valid integer"</span>)</span><br><span class="line"></span><br><span class="line">requestid = self.service.request_id()<span class="comment"># Returns the service ID used to make a client request</span></span><br><span class="line"></span><br><span class="line">payload = struct.pack(<span class="string">"B"</span>, requestid)</span><br><span class="line"><span class="keyword">if</span> self.service.use_subfunction():</span><br><span class="line">subfunction = self.subfunction</span><br><span class="line"><span class="keyword">if</span> suppress_positive_response <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> self.suppress_positive_response:</span><br><span class="line">subfunction |= <span class="number">0x80</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> suppress_positive_response == <span class="keyword">True</span>:</span><br><span class="line">subfunction |= <span class="number">0x80</span></span><br><span class="line"><span class="keyword">elif</span> suppress_positive_response == <span class="keyword">False</span>:</span><br><span class="line">subfunction &amp;= ~<span class="number">0x80</span></span><br><span class="line">payload += struct.pack(<span class="string">"B"</span>, subfunction)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> suppress_positive_response == <span class="keyword">True</span> <span class="keyword">or</span> self.suppress_positive_response == <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">'Cannot suppress positive response for service %s. This service does not have a subfunction'</span> % (self.service.get_name()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"> payload += self.data</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">from_payload</span><span class="params">(cls, payload)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Creates a ``Request`` object from a payload coming from the underlying protocols.</span></span><br><span class="line"><span class="string">This method is meant to be used by a UDS server</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param payload: The payload of data to parse</span></span><br><span class="line"><span class="string">:type payload: bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:return: A :ref:`Request&lt;Request&gt;` object with populated fields</span></span><br><span class="line"><span class="string">:rtype: :ref:`Request&lt;Request&gt;`</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">req = cls()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(payload) &gt;= <span class="number">1</span>:</span><br><span class="line">req.service = services.cls_from_request_id(payload[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> req.service <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:<span class="comment"># Invalid service ID will make service None</span></span><br><span class="line">offset = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> req.service.use_subfunction():</span><br><span class="line">offset += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> len(payload) &gt;= offset+<span class="number">1</span>: </span><br><span class="line">req.subfunction = int(payload[<span class="number">1</span>]) &amp; <span class="number">0x7F</span></span><br><span class="line">req.suppress_positive_response = <span class="keyword">True</span> <span class="keyword">if</span> payload[<span class="number">1</span>] &amp; <span class="number">0x80</span> &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">if</span> len(payload) &gt; offset+<span class="number">1</span>:</span><br><span class="line">req.data = payload[offset+<span class="number">1</span>:]</span><br><span class="line"><span class="keyword">return</span> req</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">suppress_positive_response = <span class="string">'[SuppressPosResponse] '</span> <span class="keyword">if</span> self.suppress_positive_response <span class="keyword">else</span> <span class="string">''</span></span><br><span class="line">subfunction_name = <span class="string">'(subfunction=%d) '</span> % self.subfunction <span class="keyword">if</span> self.service.use_subfunction() <span class="keyword">and</span> self.subfunction <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> <span class="string">''</span></span><br><span class="line">bytesize = len(self.data) <span class="keyword">if</span> self.data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'&lt;Request: [%s] %s- %d data bytes %sat 0x%08x&gt;'</span> % (self.service.get_name(), subfunction_name, bytesize, suppress_positive_response, id(self))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> len(self.get_payload())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="uds" scheme="https://songjiapo.com/categories/uds/"/>
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="udsoncan" scheme="https://songjiapo.com/tags/udsoncan/"/>
    
      <category term="uds" scheme="https://songjiapo.com/tags/uds/"/>
    
  </entry>
  
  <entry>
    <title>udsoncan.Response源码</title>
    <link href="https://songjiapo.com/uds/udsoncan.Response.html"/>
    <id>https://songjiapo.com/uds/udsoncan.Response.html</id>
    <published>2019-01-12T11:50:15.000Z</published>
    <updated>2019-11-08T12:50:25.644Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Response</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Represents a server Response to a client Request</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param service: The service implied by this response.</span></span><br><span class="line"><span class="string">:type service: class</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param code: The response code</span></span><br><span class="line"><span class="string">:type code: int</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param data: The response data encoded after the service and response code</span></span><br><span class="line"><span class="string">:type data: bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: valid </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(boolean) True if the response content is valid. Only ``invalid_reason`` is guaranteed to have a meaningful value if this value is False</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: invalid_reason </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(string) String explaining why the response is invalid.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: service </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(class) The response target :ref:`service&lt;Services&gt;` class</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: positive </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(boolean) True if the response code is 0 (PositiveResponse), False otherwise</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: code </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(int) The response code. </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: code_name </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(string) The response code name.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(bytes) The response data. All the payload content, except the service number and the response code</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: service_data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(object) The content of ``data`` interpreted by a service; can be any type of content.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: original_payload </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(bytes) When the response is built with `Response.from_payload`, this property contains a copy of the payload used. None otherwise.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. data:: unexpected </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(boolean) Indicates that the response was unexpected. Set by an external source such as the :ref:`Client&lt;Client&gt;` object</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Code</span>:</span></span><br><span class="line">PositiveResponse = <span class="number">0</span></span><br><span class="line">GeneralReject = <span class="number">0x10</span></span><br><span class="line">ServiceNotSupported = <span class="number">0x11</span></span><br><span class="line">SubFunctionNotSupported = <span class="number">0x12</span></span><br><span class="line">IncorrectMessageLegthOrInvalidFormat = <span class="number">0x13</span></span><br><span class="line">ResponseTooLong = <span class="number">0x14</span></span><br><span class="line">BusyRepeatRequest = <span class="number">0x21</span></span><br><span class="line">ConditionsNotCorrect = <span class="number">0x22</span></span><br><span class="line">RequestSequenceError = <span class="number">0x24</span></span><br><span class="line">NoResponseFromSubnetComponent = <span class="number">0x25</span></span><br><span class="line">FailurePreventsExecutionOfRequestedAction = <span class="number">0x26</span></span><br><span class="line">RequestOutOfRange = <span class="number">0x31</span></span><br><span class="line">SecurityAccessDenied = <span class="number">0x33</span></span><br><span class="line">InvalidKey = <span class="number">0x35</span></span><br><span class="line">ExceedNumberOfAttempts = <span class="number">0x36</span></span><br><span class="line">RequiredTimeDelayNotExpired = <span class="number">0x37</span></span><br><span class="line">UploadDownloadNotAccepted = <span class="number">0x70</span></span><br><span class="line">TransferDataSuspended = <span class="number">0x71</span></span><br><span class="line">GeneralProgrammingFailure = <span class="number">0x72</span></span><br><span class="line">WrongBlockSequenceCounter = <span class="number">0x73</span></span><br><span class="line">RequestCorrectlyReceived_ResponsePending = <span class="number">0x78</span></span><br><span class="line">SubFunctionNotSupportedInActiveSession = <span class="number">0x7E</span></span><br><span class="line">ServiceNotSupportedInActiveSession = <span class="number">0x7F</span></span><br><span class="line">RpmTooHigh = <span class="number">0x81</span></span><br><span class="line">RpmTooLow = <span class="number">0x82</span></span><br><span class="line">EngineIsRunning = <span class="number">0x83</span></span><br><span class="line">EngineIsNotRunning = <span class="number">0x84</span></span><br><span class="line">EngineRunTimeTooLow = <span class="number">0x85</span></span><br><span class="line">TemperatureTooHigh = <span class="number">0x86</span></span><br><span class="line">TemperatureTooLow = <span class="number">0x87</span></span><br><span class="line">VehicleSpeedTooHigh = <span class="number">0x88</span></span><br><span class="line">VehicleSpeedTooLow = <span class="number">0x89</span></span><br><span class="line">ThrottlePedalTooHigh = <span class="number">0x8A</span></span><br><span class="line">ThrottlePedalTooLow = <span class="number">0x8B</span></span><br><span class="line">TransmissionRangeNotInNeutral = <span class="number">0x8C</span></span><br><span class="line">TransmissionRangeNotInGear = <span class="number">0x8D</span></span><br><span class="line">ISOSAEReserved = <span class="number">0x8E</span></span><br><span class="line">BrakeSwitchNotClosed = <span class="number">0x8F</span></span><br><span class="line">ShifterLeverNotInPark = <span class="number">0x90</span></span><br><span class="line">TorqueConverterClutchLocked = <span class="number">0x91</span></span><br><span class="line">VoltageTooHigh = <span class="number">0x92</span></span><br><span class="line">VoltageTooLow = <span class="number">0x93</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Defined by ISO-15764. Offset of 0x38 is defined within UDS standard (ISO-14229)</span></span><br><span class="line">GeneralSecurityViolation = <span class="number">0x38</span> + <span class="number">0</span></span><br><span class="line">SecuredModeRequested = <span class="number">0x38</span> + <span class="number">1</span></span><br><span class="line">InsufficientProtection = <span class="number">0x38</span> + <span class="number">2</span></span><br><span class="line">TerminationWithSignatureRequested = <span class="number">0x38</span> + <span class="number">3</span></span><br><span class="line">AccessDenied = <span class="number">0x38</span> + <span class="number">4</span></span><br><span class="line">VersionNotSupported = <span class="number">0x38</span> + <span class="number">5</span></span><br><span class="line">SecuredLinkNotSupported = <span class="number">0x38</span> + <span class="number">6</span></span><br><span class="line">CertificateNotAvailable = <span class="number">0x38</span> + <span class="number">7</span></span><br><span class="line">AuditTrailInformationNotAvailable = <span class="number">0x38</span> + <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Returns the name of the response code as a string</span></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_name</span><span class="params">(cls, given_id)</span>:</span></span><br><span class="line"><span class="keyword">if</span> given_id <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> inspect.getmembers(cls):</span><br><span class="line"><span class="keyword">if</span> isinstance(member[<span class="number">1</span>], int):</span><br><span class="line"><span class="keyword">if</span> member[<span class="number">1</span>] == given_id:</span><br><span class="line"><span class="keyword">return</span> member[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> str(given_id)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Tells if a code is a negative code</span></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_negative</span><span class="params">(cls, given_id)</span>:</span></span><br><span class="line"><span class="keyword">if</span> given_id <span class="keyword">in</span> [<span class="keyword">None</span>, cls.PositiveResponse]:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> inspect.getmembers(cls):</span><br><span class="line"><span class="keyword">if</span> isinstance(member[<span class="number">1</span>], int):</span><br><span class="line"><span class="keyword">if</span> member[<span class="number">1</span>] == given_id:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, service = None, code = None, data=None)</span>:</span></span><br><span class="line"><span class="keyword">from</span> udsoncan <span class="keyword">import</span> services</span><br><span class="line"><span class="keyword">if</span> service <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">self.service = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">elif</span> isinstance(service, services.BaseService):</span><br><span class="line">self.service = service.__class__</span><br><span class="line"><span class="keyword">elif</span> inspect.isclass(service) <span class="keyword">and</span> issubclass(service, services.BaseService):</span><br><span class="line">self.service = service</span><br><span class="line"><span class="keyword">elif</span> service <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Given service must be a service class or instance"</span>)</span><br><span class="line"></span><br><span class="line">self.positive = <span class="keyword">False</span></span><br><span class="line">self.code = <span class="keyword">None</span></span><br><span class="line">self.code_name = <span class="string">""</span></span><br><span class="line">self.valid = <span class="keyword">False</span></span><br><span class="line">self.invalid_reason = <span class="string">"Object not initialized"</span></span><br><span class="line">self.service_data = <span class="keyword">None</span></span><br><span class="line">self.original_payload = <span class="keyword">None</span></span><br><span class="line">self.unexpected = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">self.service = service</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> isinstance(data, bytes):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Given data must be a valid bytes object"</span>)</span><br><span class="line"></span><br><span class="line">self.data = data <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> <span class="string">b''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> isinstance(code, int):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Response code must be a valid integer"</span>)</span><br><span class="line"><span class="keyword">elif</span> code &lt; <span class="number">0</span> <span class="keyword">or</span> code &gt; <span class="number">0xFF</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Response code must be an integer between 0 and 0xFF"</span>)</span><br><span class="line">self.code=code</span><br><span class="line">self.code_name = Response.Code.get_name(code)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> Response.Code.is_negative(code):</span><br><span class="line">self.positive=<span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.service <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> self.code <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">self.valid = <span class="keyword">True</span></span><br><span class="line">self.invalid_reason = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Used by server</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_payload</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Generates a payload to be given to the underlying protocol.</span></span><br><span class="line"><span class="string">This method is meant to be used by a UDS server</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:return: A payload to be sent through the underlying protocol</span></span><br><span class="line"><span class="string">:rtype: bytes</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> udsoncan <span class="keyword">import</span> services</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> isinstance(self.service, services.BaseService) <span class="keyword">and</span> <span class="keyword">not</span> issubclass(self.service, services.BaseService):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Cannot make payload from response object. Given service is not a valid service object"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> isinstance(self.code, int):</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">"Cannot make payload from response object. Given response code is not a valid integer"</span>)</span><br><span class="line"></span><br><span class="line">payload  = <span class="string">b''</span></span><br><span class="line"><span class="keyword">if</span> self.positive:</span><br><span class="line">payload += struct.pack(<span class="string">"B"</span>, self.service.response_id())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">payload += <span class="string">b'\x7F'</span></span><br><span class="line">payload += struct.pack(<span class="string">"B"</span>, self.service.request_id())</span><br><span class="line">payload += struct.pack(<span class="string">'B'</span>, self.code)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> self.service.has_response_data():</span><br><span class="line">payload += self.data</span><br><span class="line"><span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Analyzes a TP frame and builds a Response object. Used by client</span></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">from_payload</span><span class="params">(cls, payload)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Creates a ``Response`` object from a payload coming from the underlying protocol.</span></span><br><span class="line"><span class="string">This method is meant to be used by a UDS client</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param payload: The payload of data to parse</span></span><br><span class="line"><span class="string">:type payload: bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:return: A :ref:`Response&lt;Response&gt;` object with populated fields</span></span><br><span class="line"><span class="string">:rtype: :ref:`Response&lt;Response&gt;`</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> udsoncan <span class="keyword">import</span> services</span><br><span class="line">response = cls()</span><br><span class="line">response.original_payload = payload <span class="comment"># may be useful for debugging</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(payload) &lt; <span class="number">1</span>:</span><br><span class="line">response.valid = <span class="keyword">False</span></span><br><span class="line">response.invalid_reason = <span class="string">"Payload is empty"</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> payload[<span class="number">0</span>] != <span class="number">0x7F</span>:<span class="comment"># Positive</span></span><br><span class="line">response.service = services.cls_from_response_id(payload[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> response.service <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">response.valid = <span class="keyword">False</span></span><br><span class="line">response.invalid_reason = <span class="string">"Payload first byte is not a know service response ID."</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">data_start=<span class="number">1</span></span><br><span class="line">response.positive = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">if</span> len(payload) &lt; <span class="number">2</span> <span class="keyword">and</span> response.service.has_response_data() :</span><br><span class="line">response.valid = <span class="keyword">False</span></span><br><span class="line">response.positive = <span class="keyword">False</span></span><br><span class="line">response.invalid_reason = <span class="string">"Payload must be at least 2 bytes long (service and response)"</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">response.code = Response.Code.PositiveResponse</span><br><span class="line">response.code_name = Response.Code.get_name(Response.Code.PositiveResponse)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:<span class="comment"># Negative response</span></span><br><span class="line">response.positive = <span class="keyword">False</span></span><br><span class="line">data_start=<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(payload) &lt; <span class="number">2</span> :</span><br><span class="line">response.valid = <span class="keyword">False</span></span><br><span class="line">response.invalid_reason=  <span class="string">"Incomplete invalid response service (7Fxx)"</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line">response.service = services.cls_from_request_id(payload[<span class="number">1</span>])<span class="comment">#Request id, not response id</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response.service <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">response.valid = <span class="keyword">False</span></span><br><span class="line">response.invalid_reason = <span class="string">"Payload second byte is not a known service request ID."</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(payload) &lt; <span class="number">3</span>:</span><br><span class="line">response.valid=<span class="keyword">False</span></span><br><span class="line">response.invalid_reason=  <span class="string">"Response code missing"</span></span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">response.code = int(payload[<span class="number">2</span>])</span><br><span class="line">response.code_name = Response.Code.get_name(response.code)</span><br><span class="line"></span><br><span class="line">response.valid = <span class="keyword">True</span></span><br><span class="line">response.invalid_reason = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> len(payload) &gt; data_start:</span><br><span class="line">response.data = payload[data_start:]</span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">responsename = Response.Code.get_name(Response.Code.PositiveResponse) <span class="keyword">if</span> self.positive <span class="keyword">else</span> <span class="string">'NegativeResponse(%s)'</span> % self.code_name</span><br><span class="line">bytesize = len(self.data) <span class="keyword">if</span> self.data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'&lt;%s: [%s] - %d data bytes at 0x%08x&gt;'</span> % (responsename, self.service.get_name(), bytesize, id(self))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> len(self.get_payload())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="uds" scheme="https://songjiapo.com/categories/uds/"/>
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="udsoncan" scheme="https://songjiapo.com/tags/udsoncan/"/>
    
      <category term="uds" scheme="https://songjiapo.com/tags/uds/"/>
    
  </entry>
  
  <entry>
    <title>请求与应答</title>
    <link href="https://songjiapo.com/uds/Request%20and%20Response.html"/>
    <id>https://songjiapo.com/uds/Request%20and%20Response.html</id>
    <published>2019-01-12T07:50:15.000Z</published>
    <updated>2019-11-08T12:50:25.649Z</updated>
    
    <content type="html"><![CDATA[<p><code>client</code>和<code>server</code>交换的消息由<code>Request</code>和<code>Response</code>表示。</p><p><code>client</code>向<code>server</code>发送的请求包含<code>service number(SID)</code>，可选子<code>subfunction</code>和一些<code>data</code>。<code>server</code>处理<code>Request</code>并作出<code>Response</code>，该应答包含<code>SID</code>，响应代码和一些其他数据。</p><p>以下类提供了操作UDS <code>Request</code>和<code>Response</code>所必需的接口。</p><h1 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">req = Request(service=ECUReset, subfunction=<span class="number">1</span>, data=<span class="string">b'\x99\x88'</span>)</span><br><span class="line">payload = req.get_payload()</span><br><span class="line">print(payload) <span class="comment"># b'\x11\x01\x99\x88'</span></span><br><span class="line">req2 = Request.from_payload(payload)</span><br><span class="line">print(req2) <span class="comment"># &lt;Request: [ECUReset] (subfunction=1) - 2 data bytes at 0x12345678&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">udsoncan</span>.<span class="title">Request</span><span class="params">(service=None, subfunction=None, suppress_positive_response=False, data=None)</span></span></span><br><span class="line"><span class="class">#代表一个<span class="title">UDS</span> <span class="title">Request</span>.</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">Parameters</span>:</span></span><br><span class="line">    service (<span class="class"><span class="keyword">class</span>) – <span class="title">The</span> <span class="title">service</span> <span class="title">for</span> <span class="title">which</span> <span class="title">to</span> <span class="title">make</span> <span class="title">the</span> <span class="title">request</span>. <span class="title">This</span> <span class="title">parameter</span> <span class="title">must</span> <span class="title">be</span> <span class="title">a</span> <span class="title">class</span> <span class="title">that</span> <span class="title">extends</span> <span class="title">udsoncan</span>.<span class="title">services</span>.<span class="title">BaseService</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">subfunction</span> <span class="params">(int or None)</span> – <span class="title">The</span> <span class="title">service</span> <span class="title">subfunction</span>. <span class="title">This</span> <span class="title">value</span> <span class="title">may</span> <span class="title">be</span> <span class="title">ignored</span> <span class="title">if</span> <span class="title">the</span> <span class="title">given</span> <span class="title">service</span> <span class="title">does</span> <span class="title">not</span> <span class="title">supports</span> <span class="title">subfunctions</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">suppress_positive_response</span> <span class="params">(bool)</span> – <span class="title">Indicates</span> <span class="title">that</span> <span class="title">the</span> <span class="title">server</span> <span class="title">should</span> <span class="title">not</span> <span class="title">send</span> <span class="title">a</span> <span class="title">response</span> <span class="title">if</span> <span class="title">the</span> <span class="title">response</span> <span class="title">code</span> <span class="title">is</span> <span class="title">positive</span>. <span class="title">This</span> <span class="title">parameter</span> <span class="title">has</span> <span class="title">effect</span> <span class="title">only</span> <span class="title">when</span> <span class="title">the</span> <span class="title">given</span> <span class="title">service</span> <span class="title">supports</span> <span class="title">subfunctions</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">data</span> <span class="params">(bytes)</span> – <span class="title">The</span> <span class="title">service</span> <span class="title">data</span> <span class="title">appended</span> <span class="title">after</span> <span class="title">service</span> <span class="title">ID</span> <span class="title">and</span> <span class="title">payload</span></span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Request.get_payload(suppress_positive_response=<span class="keyword">None</span>)</span><br><span class="line"><span class="comment">#生成要提供给底层协议的有效负载。 此函数旨在供`UDS client`使用</span></span><br><span class="line"></span><br><span class="line">    Returns: A payload to be sent through the underlying protocol</span><br><span class="line"></span><br><span class="line">    Return type:bytes</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">classmethod Request.from_payload(payload)</span><br><span class="line"><span class="comment">#根据来自底层协议的payload创建Request对象。 此函数旨在由UDS server使用</span></span><br><span class="line"></span><br><span class="line">    Parameters:payload (bytes) – The payload of data to parse</span><br><span class="line"></span><br><span class="line">    Returns: A Request object <span class="keyword">with</span> populated fields</span><br><span class="line">    Return type:Request</span><br></pre></td></tr></table></figure><h1 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">response = Response(service=ECUReset, code=Response.Code.PositiveResponse, data=<span class="string">b'\x11\x22'</span>)</span><br><span class="line">payload = response.get_payload()</span><br><span class="line">print(payload) <span class="comment"># b'\x51\x11\x22'</span></span><br><span class="line">response2 = Response.from_payload(payload)</span><br><span class="line">print(response2) <span class="comment"># &lt;PositiveResponse: [ECUReset] - 2 data bytes at 0x7f9367e619b0&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class udsoncan.Response(service=None, code=None, data=None)</span><br></pre></td></tr></table></figure><blockquote><p>#表示service对client请求的响应<br>Parameters:    </p><blockquote><ul><li>service (class) – The service implied by this response.</li><li>code (int) – The response code</li><li>data (bytes) – The response data encoded after the service and response code</li></ul></blockquote></blockquote><blockquote><p>valid</p><blockquote><p>(boolean) True if the response content is valid. Only <code>invalid_reason</code> is guaranteed to have a meaningful value if this value is False</p></blockquote></blockquote><blockquote><p>invalid_reason</p><blockquote><p>(string) String explaining why the response is invalid.</p></blockquote></blockquote><blockquote><p>service</p><blockquote><p>(class) The response target service class</p></blockquote></blockquote><blockquote><p>positive</p><blockquote><p>(boolean) True if the response code is 0 (PositiveResponse), False otherwise</p></blockquote></blockquote><blockquote><p>code</p><blockquote><p>(int) The response code.</p></blockquote></blockquote><blockquote><p>code_name</p><blockquote><p>(string) The response code name.</p></blockquote></blockquote><blockquote><p>data</p><blockquote><p>(bytes) The response data. All the payload content, except the service number and the response code</p></blockquote></blockquote><blockquote><p>service_data</p><blockquote><p>(object) The content of <code>data</code> interpreted by a service; can be any type of content.</p></blockquote></blockquote><blockquote><p>original_payload</p><blockquote><p>(bytes) When the response is built with Response.from_payload, this property contains a copy of the payload used. None otherwise.</p></blockquote></blockquote><blockquote><p>unexpected</p><blockquote><p>(boolean) Indicates that the response was unexpected. Set by an external source such as the Client object</p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Response.get_payload()</span><br><span class="line"><span class="comment">#生成要提供给底层协议的有效负载。 此函数旨在供`UDS client`使用</span></span><br></pre></td></tr></table></figure><blockquote><p>Returns: A payload to be sent through the underlying protocol<br>Return type: bytes</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">classmethod Response.from_payload(payload)</span><br><span class="line"><span class="comment">#根据来自底层协议的payload创建Response对象。 此函数旨在由UDS client使用</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>Parameters: payload (bytes) – The payload of data to parse</li><li>Returns:A Response object with populated fields</li><li>Return type:    Response</li></ul></blockquote><h2 id="Response-Codes"><a href="#Response-Codes" class="headerlink" title="Response Codes"></a>Response Codes</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Response</span>.<span class="title">Code</span></span></span><br><span class="line">    PositiveResponse = 0</span><br><span class="line">    GeneralReject = <span class="number">16</span></span><br><span class="line">    ServiceNotSupported = <span class="number">17</span></span><br><span class="line">    SubFunctionNotSupported = <span class="number">18</span></span><br><span class="line">    IncorrectMessageLegthOrInvalidFormat = <span class="number">19</span></span><br><span class="line">    ResponseTooLong = <span class="number">20</span></span><br><span class="line">    BusyRepeatRequest = <span class="number">33</span></span><br><span class="line">    ConditionsNotCorrect = <span class="number">34</span></span><br><span class="line">    RequestSequenceError = <span class="number">36</span></span><br><span class="line">    NoResponseFromSubnetComponent = <span class="number">37</span></span><br><span class="line">    FailurePreventsExecutionOfRequestedAction = <span class="number">38</span></span><br><span class="line">    RequestOutOfRange = <span class="number">49</span></span><br><span class="line">    SecurityAccessDenied = <span class="number">51</span></span><br><span class="line">    InvalidKey = <span class="number">53</span></span><br><span class="line">    ExceedNumberOfAttempts = <span class="number">54</span></span><br><span class="line">    RequiredTimeDelayNotExpired = <span class="number">55</span></span><br><span class="line">    UploadDownloadNotAccepted = <span class="number">112</span></span><br><span class="line">    TransferDataSuspended = <span class="number">113</span></span><br><span class="line">    GeneralProgrammingFailure = <span class="number">114</span></span><br><span class="line">    WrongBlockSequenceCounter = <span class="number">115</span></span><br><span class="line">    RequestCorrectlyReceived_ResponsePending = <span class="number">120</span></span><br><span class="line">    SubFunctionNotSupportedInActiveSession = <span class="number">126</span></span><br><span class="line">    ServiceNotSupportedInActiveSession = <span class="number">127</span></span><br><span class="line">    RpmTooHigh = <span class="number">129</span></span><br><span class="line">    RpmTooLow = <span class="number">130</span></span><br><span class="line">    EngineIsRunning = <span class="number">131</span></span><br><span class="line">    EngineIsNotRunning = <span class="number">132</span></span><br><span class="line">    EngineRunTimeTooLow = <span class="number">133</span></span><br><span class="line">    TemperatureTooHigh = <span class="number">134</span></span><br><span class="line">    TemperatureTooLow = <span class="number">135</span></span><br><span class="line">    VehicleSpeedTooHigh = <span class="number">136</span></span><br><span class="line">    VehicleSpeedTooLow = <span class="number">137</span></span><br><span class="line">    ThrottlePedalTooHigh = <span class="number">138</span></span><br><span class="line">    ThrottlePedalTooLow = <span class="number">139</span></span><br><span class="line">    TransmissionRangeNotInNeutral = <span class="number">140</span></span><br><span class="line">    TransmissionRangeNotInGear = <span class="number">141</span></span><br><span class="line">    ISOSAEReserved = <span class="number">142</span></span><br><span class="line">    BrakeSwitchNotClosed = <span class="number">143</span></span><br><span class="line">    ShifterLeverNotInPark = <span class="number">144</span></span><br><span class="line">    TorqueConverterClutchLocked = <span class="number">145</span></span><br><span class="line">    VoltageTooHigh = <span class="number">146</span></span><br><span class="line">    VoltageTooLow = <span class="number">147</span></span><br><span class="line">    GeneralSecurityViolation = <span class="number">56</span></span><br><span class="line">    SecuredModeRequested = <span class="number">57</span></span><br><span class="line">    InsufficientProtection = <span class="number">58</span></span><br><span class="line">    TerminationWithSignatureRequested = <span class="number">59</span></span><br><span class="line">    AccessDenied = <span class="number">60</span></span><br><span class="line">    VersionNotSupported = <span class="number">61</span></span><br><span class="line">    SecuredLinkNotSupported = <span class="number">62</span></span><br><span class="line">    CertificateNotAvailable = <span class="number">63</span></span><br><span class="line">    AuditTrailInformationNotAvailable = <span class="number">64</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;client&lt;/code&gt;和&lt;code&gt;server&lt;/code&gt;交换的消息由&lt;code&gt;Request&lt;/code&gt;和&lt;code&gt;Response&lt;/code&gt;表示。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;client&lt;/code&gt;向&lt;code&gt;server&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="uds" scheme="https://songjiapo.com/categories/uds/"/>
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="udsoncan" scheme="https://songjiapo.com/tags/udsoncan/"/>
    
      <category term="uds" scheme="https://songjiapo.com/tags/uds/"/>
    
  </entry>
  
  <entry>
    <title>udsoncan.connections源码</title>
    <link href="https://songjiapo.com/uds/udsoncan.connections.html"/>
    <id>https://songjiapo.com/uds/udsoncan.connections.html</id>
    <published>2019-01-12T03:29:08.850Z</published>
    <updated>2019-11-08T12:50:25.651Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">import</span> can</span><br><span class="line">_import_can_err = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">_import_can_err = e</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">import</span> isotp</span><br><span class="line">_import_isotp_err = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">_import_isotp_err = e</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> udsoncan.Request <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">from</span> udsoncan.Response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> udsoncan.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseConnection</span><span class="params">(ABC)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None)</span>:</span></span><br><span class="line"><span class="keyword">if</span> name <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">self.name = <span class="string">'Connection'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.name = <span class="string">'Connection[%s]'</span> % (name)</span><br><span class="line"></span><br><span class="line">self.logger = logging.getLogger(self.name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(self, data)</span>:</span></span><br><span class="line"><span class="string">"""Sends data to the underlying transport protocol</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param data: The data or object to send. If a Request or Response is given, the value returned by get_payload() will be sent.</span></span><br><span class="line"><span class="string">:type data: bytes, Request, Response</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> isinstance(data, Request) <span class="keyword">or</span> isinstance(data, Response):</span><br><span class="line">payload = data.get_payload()  </span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">payload = data</span><br><span class="line"></span><br><span class="line">self.logger.debug(<span class="string">'Sending %d bytes : [%s]'</span> % (len(payload), binascii.hexlify(payload) ))</span><br><span class="line">self.specific_send(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>, exception=False)</span>:</span></span><br><span class="line"><span class="string">"""Waits for the reception of a frame of data from the underlying transport protocol</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param timeout: The maximum amount of time to wait before giving up in seconds</span></span><br><span class="line"><span class="string">:type timeout: int</span></span><br><span class="line"><span class="string">:param exception: Boolean value indicating if this function may return exceptions.</span></span><br><span class="line"><span class="string">When ``True``, all exceptions may be raised, including ``TimeoutException``</span></span><br><span class="line"><span class="string">When ``False``, all exceptions will be logged as ``DEBUG`` and ``None`` will be returned.</span></span><br><span class="line"><span class="string">:type exception: bool</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: Received data</span></span><br><span class="line"><span class="string">:rtype: bytes or None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">frame = self.specific_wait_frame(timeout=timeout)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">self.logger.debug(<span class="string">'No data received: [%s] - %s '</span> % (e.__class__.__name__, str(e)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> exception == <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">raise</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">frame = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> frame <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">self.logger.debug(<span class="string">'Received %d bytes : [%s]'</span> % (len(frame), binascii.hexlify(frame) ))</span><br><span class="line"><span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_send</span><span class="params">(self, payload)</span>:</span></span><br><span class="line"><span class="string">"""The implementation of the send method.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param payload: Data to send</span></span><br><span class="line"><span class="string">:type payload: bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>)</span>:</span></span><br><span class="line"><span class="string">"""The implementation of the ``wait_frame`` method. </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param timeout: The maximum amount of time to wait before giving up</span></span><br><span class="line"><span class="string">:type timeout: int</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: Received data</span></span><br><span class="line"><span class="string">:rtype: bytes or None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="string">""" Set up the connection object. </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="string">""" Close the connection object</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_rxqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="string">""" Empty all unread data in the reception buffer.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:returns: None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, traceback)</span>:</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocketConnection</span><span class="params">(BaseConnection)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Sends and receives data through a socket.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param sock: The socket to use. This socket must be bound and ready to use. Only ``send()`` and ``recv()`` will be called by this Connection</span></span><br><span class="line"><span class="string">:type sock: socket.socket</span></span><br><span class="line"><span class="string">:param bufsize: Maximum buffer size of the socket, this value is passed to ``recv()``</span></span><br><span class="line"><span class="string">:type bufsize: int</span></span><br><span class="line"><span class="string">:param name: This name is included in the logger name so that its output can be redirected. The logger name will be ``Connection[&lt;name&gt;]``</span></span><br><span class="line"><span class="string">:type name: string</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, sock, bufsize=<span class="number">4095</span>, name=None)</span>:</span></span><br><span class="line">BaseConnection.__init__(self, name)</span><br><span class="line"></span><br><span class="line">self.rxqueue = queue.Queue()</span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.rxthread = <span class="keyword">None</span></span><br><span class="line">self.sock = sock</span><br><span class="line">self.sock.settimeout(<span class="number">0.1</span>)<span class="comment"># for recv</span></span><br><span class="line">self.bufsize=bufsize</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.rxthread = threading.Thread(target=self.rxthread_task)</span><br><span class="line">self.rxthread.start()</span><br><span class="line">self.opened = <span class="keyword">True</span></span><br><span class="line">self.logger.info(<span class="string">'Connection opened'</span>)</span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, traceback)</span>:</span></span><br><span class="line">self.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_open</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self.opened</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rxthread_task</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.exit_requested:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">data = self.sock.recv(self.bufsize)</span><br><span class="line"><span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">self.rxqueue.put(data)</span><br><span class="line"><span class="keyword">except</span> socket.timeout:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">self.exit_requested = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">self.exit_requested = <span class="keyword">True</span></span><br><span class="line">self.rxthread.join()</span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.logger.info(<span class="string">'Connection closed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_send</span><span class="params">(self, payload)</span>:</span></span><br><span class="line">self.sock.send(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line"><span class="keyword">raise</span> RuntimeError(<span class="string">"Connection is not open"</span>)</span><br><span class="line"></span><br><span class="line">timedout = <span class="keyword">False</span></span><br><span class="line">frame = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">frame = self.rxqueue.get(block=<span class="keyword">True</span>, timeout=timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> queue.Empty:</span><br><span class="line">timedout = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> timedout:</span><br><span class="line"><span class="keyword">raise</span> TimeoutException(<span class="string">"Did not received frame in time (timeout=%s sec)"</span> % timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_rxqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.rxqueue.empty():</span><br><span class="line">self.rxqueue.get()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IsoTPSocketConnection</span><span class="params">(BaseConnection)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Sends and receives data through an ISO-TP socket. Makes cleaner code than SocketConnection but offers no additional functionality.</span></span><br><span class="line"><span class="string">The `can-isotp module &lt;https://github.com/pylessard/python-can-isotp&gt;`_ must be installed in order to use this connection</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param interface: The can interface to use (example: `can0`)</span></span><br><span class="line"><span class="string">:type interface: string</span></span><br><span class="line"><span class="string">:param rxid: The reception CAN id</span></span><br><span class="line"><span class="string">:type rxid: int </span></span><br><span class="line"><span class="string">:param txid: The transmission CAN id</span></span><br><span class="line"><span class="string">:type txid: int</span></span><br><span class="line"><span class="string">:param name: This name is included in the logger name so that its output can be redirected. The logger name will be ``Connection[&lt;name&gt;]``</span></span><br><span class="line"><span class="string">:type name: string</span></span><br><span class="line"><span class="string">:param tpsock: An optional ISO-TP socket to use instead of creating one.</span></span><br><span class="line"><span class="string">:type tpsock: isotp.socket</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, interface, rxid, txid, name=None, tpsock=None)</span>:</span></span><br><span class="line"></span><br><span class="line">BaseConnection.__init__(self, name)</span><br><span class="line"></span><br><span class="line">self.interface=interface</span><br><span class="line">self.rxid=rxid</span><br><span class="line">self.txid=txid</span><br><span class="line">self.rxqueue = queue.Queue()</span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tpsock <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="string">'isotp'</span> <span class="keyword">not</span> <span class="keyword">in</span> sys.modules:</span><br><span class="line"><span class="keyword">if</span> _import_isotp_err <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">raise</span> ImportError(<span class="string">'isotp module is not loaded'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> _import_isotp_err</span><br><span class="line">self.tpsock = isotp.socket(timeout=<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.tpsock = tpsock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line">self.tpsock.bind(self.interface, rxid=self.rxid, txid=self.txid)</span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.rxthread = threading.Thread(target=self.rxthread_task)</span><br><span class="line">self.rxthread.start()</span><br><span class="line">self.opened = <span class="keyword">True</span></span><br><span class="line">self.logger.info(<span class="string">'Connection opened'</span>)</span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, traceback)</span>:</span></span><br><span class="line">self.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_open</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self.tpsock.bound</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rxthread_task</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.exit_requested:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">data = self.tpsock.recv()</span><br><span class="line"><span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">self.rxqueue.put(data)</span><br><span class="line"><span class="keyword">except</span> socket.timeout:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">self.exit_requested = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">self.exit_requested = <span class="keyword">True</span></span><br><span class="line">self.rxthread.join()</span><br><span class="line">self.tpsock.close()</span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.logger.info(<span class="string">'Connection closed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_send</span><span class="params">(self, payload)</span>:</span></span><br><span class="line">self.tpsock.send(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line"><span class="keyword">raise</span> RuntimeError(<span class="string">"Connection is not open"</span>)</span><br><span class="line"></span><br><span class="line">timedout = <span class="keyword">False</span></span><br><span class="line">frame = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">frame = self.rxqueue.get(block=<span class="keyword">True</span>, timeout=timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> queue.Empty:</span><br><span class="line">timedout = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> timedout:</span><br><span class="line"><span class="keyword">raise</span> TimeoutException(<span class="string">"Did not received ISOTP frame in time (timeout=%s sec)"</span> % timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_rxqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.rxqueue.empty():</span><br><span class="line">self.rxqueue.get()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IsoTPConnection</span><span class="params">(IsoTPSocketConnection)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Same as :class:`IsoTPSocketConnection &lt;udsoncan.connections.IsoTPSocketConnection.Session&gt;`. Exists only for backward compatibility. </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueConnection</span><span class="params">(BaseConnection)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Sends and receives data using 2 Python native queues.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- ``MyConnection.fromuserqueue`` : Data read from this queue when ``wait_frame`` is called</span></span><br><span class="line"><span class="string">- ``MyConnection.touserqueue`` : Data written to this queue when ``send`` is called</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param mtu: Optional maximum frame size. Messages will be truncated to this size</span></span><br><span class="line"><span class="string">:type mtu: int</span></span><br><span class="line"><span class="string">:param name: This name is included in the logger name so that its output can be redirected. The logger name will be ``Connection[&lt;name&gt;]``</span></span><br><span class="line"><span class="string">:type name: string</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, mtu=<span class="number">4095</span>)</span>:</span></span><br><span class="line">BaseConnection.__init__(self, name)</span><br><span class="line"></span><br><span class="line">self.fromuserqueue = queue.Queue()<span class="comment"># Client reads from this queue. Other end is simulated</span></span><br><span class="line">self.touserqueue = queue.Queue()<span class="comment"># Client writes to this queue. Other end is simulated</span></span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.mtu = mtu</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line">self.opened = <span class="keyword">True</span></span><br><span class="line">self.logger.info(<span class="string">'Connection opened'</span>)</span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, traceback)</span>:</span></span><br><span class="line">self.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_open</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self.opened </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">self.empty_rxqueue()</span><br><span class="line">self.empty_txqueue()</span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.logger.info(<span class="string">'Connection closed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_send</span><span class="params">(self, payload)</span>:</span></span><br><span class="line"><span class="keyword">if</span> self.mtu <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> len(payload) &gt; self.mtu:</span><br><span class="line">self.logger.warning(<span class="string">"Truncating payload to be set to a length of %d"</span> % (self.mtu))</span><br><span class="line">payload = payload[<span class="number">0</span>:self.mtu]</span><br><span class="line"></span><br><span class="line">self.touserqueue.put(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line"><span class="keyword">raise</span> RuntimeException(<span class="string">"Connection is not open"</span>)</span><br><span class="line"></span><br><span class="line">timedout = <span class="keyword">False</span></span><br><span class="line">frame = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">frame = self.fromuserqueue.get(block=<span class="keyword">True</span>, timeout=timeout)</span><br><span class="line"><span class="keyword">except</span> queue.Empty:</span><br><span class="line">timedout = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> timedout:</span><br><span class="line"><span class="keyword">raise</span> TimeoutException(<span class="string">"Did not receive frame from user queue in time (timeout=%s sec)"</span> % timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.mtu <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> frame <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> len(frame) &gt; self.mtu:</span><br><span class="line">self.logger.warning(<span class="string">"Truncating received payload to a length of %d"</span> % (self.mtu))</span><br><span class="line">frame = frame[<span class="number">0</span>:self.mtu]</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> frame</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_rxqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.fromuserqueue.empty():</span><br><span class="line">self.fromuserqueue.get()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_txqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.touserqueue.empty():</span><br><span class="line">self.touserqueue.get()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PythonIsoTpConnection</span><span class="params">(BaseConnection)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Sends and receives data using a `can-isotp &lt;https://github.com/pylessard/python-can-isotp&gt;`_ Python module which is a Python implementation of the IsoTp transport protocol</span></span><br><span class="line"><span class="string">which can be coupled with `python-can &lt;https://python-can.readthedocs.io&gt;`_ module to interract with CAN hardware</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`can-isotp &lt;https://github.com/pylessard/python-can-isotp&gt;`_ must be installed in order to use this connection.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">See an :ref:`example&lt;example_using_python_can&gt;`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param isotp_layer: The IsoTP Transport layer object coming from the ``isotp`` module.</span></span><br><span class="line"><span class="string">:type isotp_layer: :class:`isotp.TransportLayer&lt;isotp.TransportLayer&gt;`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:param name: This name is included in the logger name so that its output can be redirected. The logger name will be ``Connection[&lt;name&gt;]``</span></span><br><span class="line"><span class="string">:type name: string</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">mtu = <span class="number">4095</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, isotp_layer, name=None)</span>:</span></span><br><span class="line">BaseConnection.__init__(self, name)</span><br><span class="line">self.toIsoTPQueue = queue.Queue()</span><br><span class="line">self.fromIsoTPQueue = queue.Queue()</span><br><span class="line">self.rxthread = <span class="keyword">None</span></span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.isotp_layer = isotp_layer</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> isinstance(self.isotp_layer, isotp.TransportLayer) , <span class="string">'isotp_layer must be a valid isotp.TransportLayer '</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, bus=None)</span>:</span></span><br><span class="line"><span class="keyword">if</span> bus <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">self.isotp_layer.set_bus(bus)</span><br><span class="line"></span><br><span class="line">self.exit_requested = <span class="keyword">False</span></span><br><span class="line">self.rxthread = threading.Thread(target=self.rxthread_task)</span><br><span class="line">self.rxthread.start()</span><br><span class="line">self.opened = <span class="keyword">True</span></span><br><span class="line">self.logger.info(<span class="string">'Connection opened'</span>)</span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, traceback)</span>:</span></span><br><span class="line">self.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_open</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> self.opened </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">self.empty_rxqueue()</span><br><span class="line">self.empty_txqueue()</span><br><span class="line">self.exit_requested=<span class="keyword">True</span></span><br><span class="line">self.rxthread.join()</span><br><span class="line">self.isotp_layer.reset()</span><br><span class="line">self.opened = <span class="keyword">False</span></span><br><span class="line">self.logger.info(<span class="string">'Connection closed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_send</span><span class="params">(self, payload)</span>:</span></span><br><span class="line"><span class="keyword">if</span> self.mtu <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> len(payload) &gt; self.mtu:</span><br><span class="line">self.logger.warning(<span class="string">"Truncating payload to be set to a length of %d"</span> % (self.mtu))</span><br><span class="line">payload = payload[<span class="number">0</span>:self.mtu]</span><br><span class="line"></span><br><span class="line">self.toIsoTPQueue.put(bytearray(payload)) <span class="comment"># isotp.protocol.TransportLayer uses byte array. udsoncan is strict on bytes format</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">specific_wait_frame</span><span class="params">(self, timeout=<span class="number">2</span>)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line"><span class="keyword">raise</span> RuntimeException(<span class="string">"Connection is not open"</span>)</span><br><span class="line"></span><br><span class="line">timedout = <span class="keyword">False</span></span><br><span class="line">frame = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">frame = self.fromIsoTPQueue.get(block=<span class="keyword">True</span>, timeout=timeout)</span><br><span class="line"><span class="keyword">except</span> queue.Empty:</span><br><span class="line">timedout = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> timedout:</span><br><span class="line"><span class="keyword">raise</span> TimeoutException(<span class="string">"Did not receive frame from user queue in time (timeout=%s sec)"</span> % timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> self.mtu <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line"><span class="keyword">if</span> frame <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> len(frame) &gt; self.mtu:</span><br><span class="line">self.logger.warning(<span class="string">"Truncating received payload to a length of %d"</span> % (self.mtu))</span><br><span class="line">frame = frame[<span class="number">0</span>:self.mtu]</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bytes(frame)<span class="comment"># isotp.protocol.TransportLayer uses bytearray. udsoncan is strict on bytes format</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_rxqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.fromIsoTPQueue.empty():</span><br><span class="line">self.fromIsoTPQueue.get()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_txqueue</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.toIsoTPQueue.empty():</span><br><span class="line">self.toIsoTPQueue.get()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rxthread_task</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.exit_requested:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> self.toIsoTPQueue.empty():</span><br><span class="line">self.isotp_layer.send(self.toIsoTPQueue.get())</span><br><span class="line"></span><br><span class="line">self.isotp_layer.process()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> self.isotp_layer.available():</span><br><span class="line">self.fromIsoTPQueue.put(self.isotp_layer.recv())</span><br><span class="line"></span><br><span class="line">time.sleep(self.isotp_layer.sleep_time())</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">self.exit_requested = <span class="keyword">True</span></span><br><span class="line">self.logger.error(str(e))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="udsoncan" scheme="https://songjiapo.com/tags/udsoncan/"/>
    
      <category term="uds" scheme="https://songjiapo.com/tags/uds/"/>
    
  </entry>
  
  <entry>
    <title>udsoncan-underlying protocol(connections)</title>
    <link href="https://songjiapo.com/uds/udsoncan.html"/>
    <id>https://songjiapo.com/uds/udsoncan.html</id>
    <published>2019-01-12T03:06:49.948Z</published>
    <updated>2019-11-08T12:50:25.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h1><p>由于UDS是应用层协议，因此必须在数据传输协议上使用。目前的行业大多使用ISO-TP协议（ISO-15765）而不是CAN总线（ISO-11898）。</p><p>Controller Area Network（CAN）协议是一种<code>link layer protocol</code>，它通过8个字节的小块发送数据。 ISO-TP是一种<code>transport protocol</code>，允许传输更大的帧，通常最大为4095字节，尽管2016版本的标准使用超过32位定义的大小，理论上允许4GB一帧。</p><p>目前的ISO-15765协议分为4部分。 <code>ISO-15765-2</code>讲述了如何传输大帧，<code>ISO-15765-3</code>定义了如何将ISO-TP字段映射到UDS消息。</p><p>本工程仅讨论uds应用层。</p><h1 id="How-to"><a href="#How-to" class="headerlink" title="How to"></a>How to</h1><p>通过<code>Connection</code>对象访问底层协议。用户可以通过继承<code>BaseConnection</code>对象来定义自己的<code>Connection</code>对象并实现<code>abstract method</code>。</p><p>与<code>Connection</code>对象一起使用的主要接口是：</p><h2 id="BaseConnection-send-data"><a href="#BaseConnection-send-data" class="headerlink" title="BaseConnection.send(data)"></a>BaseConnection.send(data)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将数据发送到底层传输协议</span></span><br><span class="line"></span><br><span class="line">Parameters:data (bytes, Request, Response) – The data <span class="keyword">or</span> object to send. If a Request <span class="keyword">or</span> Response <span class="keyword">is</span> given, the value returned by get_payload() will be sent.</span><br><span class="line"></span><br><span class="line">Returns:<span class="keyword">None</span></span><br></pre></td></tr></table></figure><h2 id="BaseConnection-wait-frame-timeout-2-exception-False"><a href="#BaseConnection-wait-frame-timeout-2-exception-False" class="headerlink" title="BaseConnection.wait_frame(timeout=2, exception=False)"></a>BaseConnection.wait_frame(timeout=2, exception=False)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 等待从底层传输协议接收数据帧</span></span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line">    timeout (int) – The maximum amount of time to wait before giving up <span class="keyword">in</span> seconds</span><br><span class="line"></span><br><span class="line">    exception (bool) – Boolean value indicating <span class="keyword">if</span> this function may <span class="keyword">return</span> exceptions. When <span class="keyword">True</span>, all exceptions may be raised, including TimeoutException When <span class="keyword">False</span>, all exceptions will be logged <span class="keyword">as</span> DEBUG <span class="keyword">and</span> <span class="keyword">None</span> will be returned.</span><br><span class="line">    </span><br><span class="line">Returns:    Received data</span><br><span class="line"></span><br><span class="line">Return type:    bytes <span class="keyword">or</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure><h1 id="可用的Connections"><a href="#可用的Connections" class="headerlink" title="可用的Connections"></a>可用的<code>Connections</code></h1><p>一些<code>Connections</code>已经可用，只需从udsoncan.connections模块导入。这些<code>Connections</code>中的每一个都旨在解决特定用例。</p><h2 id="PythonIsoTpConnection"><a href="#PythonIsoTpConnection" class="headerlink" title="PythonIsoTpConnection"></a>PythonIsoTpConnection</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">udsoncan</span>.<span class="title">connections</span>.<span class="title">PythonIsoTpConnection</span><span class="params">(isotp_layer, name=None)</span></span></span><br></pre></td></tr></table></figure><p>发送和接收数据可以使用<code>can-isotp</code> Python模块，该模块是用Python实现<code>IsoTp</code>传输协议，<code>IsoTp</code>可以与<code>python-can</code>模块配合使用，与CAN硬件进行交互</p><p>必须安装<code>can-isotp</code>才能使用此<code>connection</code>。</p><p>举个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Parameters:</span><br><span class="line">    isotp_layer (isotp.TransportLayer) – The IsoTP Transport layer object coming from the isotp module.</span><br><span class="line"></span><br><span class="line">    name (string) – This name is included in the logger name so that its output can be redirected. The logger name will be Connection[&lt;name&gt;]</span><br></pre></td></tr></table></figure></p><h2 id="SocketConnection"><a href="#SocketConnection" class="headerlink" title="SocketConnection"></a>SocketConnection</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">udsoncan</span>.<span class="title">connections</span>.<span class="title">SocketConnection</span><span class="params">(sock, bufsize=<span class="number">4095</span>, name=None)</span></span></span><br></pre></td></tr></table></figure><p>通过<code>socket</code>发送和接收数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Parameters:</span><br><span class="line">    sock (socket.socket) – The socket to use. This socket must be bound and ready to use. Only send() and recv() will be called by this Connection</span><br><span class="line"></span><br><span class="line">    bufsize (int) – Maximum buffer size of the socket, this value is passed to recv()</span><br><span class="line"></span><br><span class="line">    name (string) – This name is included in the logger name so that its output can be redirected. The logger name will be Connection[&lt;name&gt;]</span><br></pre></td></tr></table></figure><h2 id="IsoTPSocketConnection"><a href="#IsoTPSocketConnection" class="headerlink" title="IsoTPSocketConnection"></a>IsoTPSocketConnection</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">udsoncan</span>.<span class="title">connections</span>.<span class="title">IsoTPSocketConnection</span><span class="params">(interface, rxid, txid, name=None, tpsock=None)</span></span></span><br></pre></td></tr></table></figure><p>通过<code>ISO-TP socket</code>发送和接收数据。代码比SocketConnection更干净，但不提供其他功能。必须安装<code>can-isotp</code>模块才能使用此<code>connection</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Parameters:</span><br><span class="line">    interface (string) – The can interface to use (example: can0)</span><br><span class="line"></span><br><span class="line">    rxid (int) – The reception CAN id</span><br><span class="line"></span><br><span class="line">    txid (int) – The transmission CAN id</span><br><span class="line"></span><br><span class="line">    name (string) – This name is included in the logger name so that its output can be redirected. The logger name will be Connection[&lt;name&gt;]</span><br><span class="line"></span><br><span class="line">    tpsock (isotp.socket) – An optional ISO-TP socket to use instead of creating one.</span><br></pre></td></tr></table></figure><h2 id="QueueConnection"><a href="#QueueConnection" class="headerlink" title="QueueConnection"></a>QueueConnection</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">udsoncan</span>.<span class="title">connections</span>.<span class="title">QueueConnection</span><span class="params">(name=None, mtu=<span class="number">4095</span>)</span></span></span><br></pre></td></tr></table></figure><p>使用2个Python本机队列发送和接收数据。</p><ul><li><code>MyConnection.fromuserqueue</code> : Data read from this queue when <code>wait_frame</code> is called</li><li><code>MyConnection.touserqueue</code> : Data written to this queue when <code>send</code> is called</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Parameters:</span><br><span class="line">    mtu (int) – Optional maximum frame size. Messages will be truncated to this size</span><br><span class="line"></span><br><span class="line">    name (string) – This name is included in the logger name so that its output can be redirected. The logger name will be Connection[&lt;name&gt;]</span><br></pre></td></tr></table></figure><h1 id="Defining-a-new-Connection"><a href="#Defining-a-new-Connection" class="headerlink" title="Defining a new Connection"></a>Defining a new Connection</h1><p>如果以上所有<code>Connection</code>都不满足您的需求，您可以实现自己的<code>Connection</code>。</p><p>为了定义新<code>Connection</code>，必须实现如下5个函数，因为它们将由<code>Client</code>对象调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BaseConnection.open()</span><br><span class="line">    Set up the connection object.</span><br><span class="line"></span><br><span class="line">    Returns:None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BaseConnection.close()</span><br><span class="line">    Close the connection object</span><br><span class="line"></span><br><span class="line">    Returns:None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BaseConnection.specific_send(payload)</span><br><span class="line">    The implementation of the send method.</span><br><span class="line"></span><br><span class="line">    Parameters:payload (bytes) – Data to send</span><br><span class="line">    eturns:None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BaseConnection.specific_wait_frame(timeout=2)</span><br><span class="line">    The implementation of the wait_frame method.</span><br><span class="line"></span><br><span class="line">    Parameters:timeout (int) – The maximum amount of time to wait before giving up</span><br><span class="line"></span><br><span class="line">    Returns:Received data</span><br><span class="line">    Return type:bytes or None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BaseConnection.empty_rxqueue()</span><br><span class="line">    Empty all unread data in the reception buffer.</span><br><span class="line"></span><br><span class="line">    Returns:None</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Basics&quot;&gt;&lt;a href=&quot;#Basics&quot; class=&quot;headerlink&quot; title=&quot;Basics&quot;&gt;&lt;/a&gt;Basics&lt;/h1&gt;&lt;p&gt;由于UDS是应用层协议，因此必须在数据传输协议上使用。目前的行业大多使用ISO-TP协议（ISO-15765
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://songjiapo.com/tags/python/"/>
    
      <category term="udsoncan" scheme="https://songjiapo.com/tags/udsoncan/"/>
    
      <category term="uds" scheme="https://songjiapo.com/tags/uds/"/>
    
  </entry>
  
  <entry>
    <title>无人驾驶第一课-Lesson 4：感知</title>
    <link href="https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-18-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%204-Perception.html"/>
    <id>https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-18-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%204-Perception.html</id>
    <published>2018-07-18T13:08:31.000Z</published>
    <updated>2019-11-08T12:50:25.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="感知"><a href="#感知" class="headerlink" title="感知"></a>感知</h1><p>在本课中 我们将首先介绍计算机视觉的基本应用领域，然后我们将介绍机器学习、神经网络和卷积神经网络的基础知识。</p><p>我们将继续讨论感知模块在无人驾驶车中的具体任务，接下来将介绍 Apollo 感知模块的体系结构和传感器融合的相关主题。希望这会让你对无人驾驶感知系统有一个清晰认识</p><h2 id="计算机视觉"><a href="#计算机视觉" class="headerlink" title="计算机视觉"></a>计算机视觉</h2><p>作为人类 你和我可以自动识别图像中的物体，甚至可以推断这些物体之间的关系。但是 对于计算机而言，图像只是红色、绿色和蓝色值的集合。如何将这些颜色值翻译为解读有意义的图像内容并不明显。</p><p><strong>无人驾驶车有四个感知世界的核心任务</strong>。</p><ul><li><p>检测 是指找出物体在环境中的位置</p></li><li><p>分类 是指明确对象是什么</p></li><li><p>跟踪 是指随时间的推移观察移动物体。如其他车辆、自行车和行人</p></li><li>语义分割意味着将图像中的每个像素与语义类别进行匹配。如道路、汽车或天空</li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/perception.jpg" alt=""></p><p>我们可将 <strong>分类</strong> 作为作为研究计算机视觉一般数据流程的例子。</p><p><strong>图像分类器是一种将图像作为输入并输出标识该图像的标签或“类别”的算法</strong>。例如 交通标志分类器查看停车标志并识别它是停车标志、让路标志、限速标志，还是其他类型的标志。分类器甚至可以识别行为。比如一个人是在走路 还是在跑步。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/classification%20steps.jpg" alt=""></p><p>分类器有很多种，但它们都包含一系列类似的步骤。</p><ul><li>首先 计算机接收类似摄像头等成像设备的输入，这通常被捕获为图像或一系列图像。</li><li>然后通过预处理发送每个图像预处理对每个图像进行了标准化处理。常见的预处理步骤包括调整图像大小或旋转图像或将图像从一个色彩空间转换为另一个色彩空间。例如从全彩到灰度。预处理可帮助我们的模型更快地处理和学习图像。</li><li>接下来 提取特征。特征有助于计算机理解图像。例如 将汽车与自行车区分开来的一些特征，汽车通常具有更大的形状 并且它有四个轮子而不是两个，形状和车轮将是汽车的显著特征。我们将在本课的后面详细讨论特征。</li><li>最后 这些特征被输入到分类模型中，此步骤使用特征来选择图像类别。例如 分类器可以确定图像是否包含汽车、自行车、行人或者根本不包含这样的对象。为了完成这些视觉任务，需要建立模型。模型是帮助计算机了解图像内容的工具，在计算机视觉中 无论经过训练的模型执行什么任务，它们通常在开始时将摄像头图像作为输入。</li></ul><h2 id="摄像头图像"><a href="#摄像头图像" class="headerlink" title="摄像头图像"></a>摄像头图像</h2><p>摄像头图像是最常见的计算机视觉数据。</p><p>以这张汽车照片为例，让我们看看计算机如何认为这实际上是一辆汽车的图像。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/%E5%9B%BE%E5%83%8F%E7%9F%A9%E9%98%B5.jpg" alt=""></p><p> <strong>从计算机的角度来看，图像只是一个二维网格，也被称为矩阵</strong>。矩阵中的每个单元格都包含一个值，数字图像全部由像素组成，其中包含非常小的颜色或强度单位。</p><p>图像中的每个像素都只是一个数值，这些值构成了我们的图像矩阵。我们甚至可以改变这些像素值。我们可以通过为每个像素值添加一个标量整数来改变图像亮度，我们也可以向右移动每个像素值，我们还可以执行许多其他操作。通常 这些数字网格是许多图像处理技术的基础。多数颜色和形状转换都只是通过对图像进行数学运算以及逐一像素进行更改来完成。现在是一个将图像分解为二维灰度像素值网格的示例。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/RGB%E5%9B%BE.jpg" alt=""></p><p>彩色图像是相似的 但更复杂一点，彩色图像被构建为值的三维立方体。每个立方体都有高度、宽度和深度，深度为颜色通道数量。大多数彩色图像以三种颜色组合表示，红色、绿色和蓝色，这些图像被称为 <strong>RGB 图像</strong>。对于 RGB 图像 深度为 3！因此 RGB 图像可以用一个薄盒子表示，将深度视为三重叠加的二维色层很有帮助。一层为红色，一层为绿色、一层为蓝色，它们一起构建了一个完整的彩色图像。</p><h2 id="LiDAR-图像"><a href="#LiDAR-图像" class="headerlink" title="LiDAR 图像"></a>LiDAR 图像</h2><p>激光雷达传感器创建环境的点云表征，提供了难以通过摄像头图像获得的信息，如距离和高度。</p><p>激光雷达传感器使用光线 ，尤其是激光 来测量与环境中反射该光线的物体之间的距离。激光雷达发射激光脉冲并测量物体将每个激光脉冲反射回传感器所花费的时间。反射需要的时间越长 物体离传感器越远，激光雷达正是通过这种方式来构建世界的视觉表征。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/lidar%E5%9B%BE%E5%83%8F.jpg" alt=""></p><p>你可以在此可视化视图中看到激光雷达的输出，激光雷达通过发射光脉冲来检测汽车周围的环境。蓝色点表示反射激光脉冲的物体，中间的黑色区域是无人驾驶车本身占据的空间。由于激光雷达测量激光束反射，它收集的数据形成一团点或 <strong>“点云”</strong>。</p><p>点云中的每个点代表反射回传感器的激光束，这些点云可以告诉我们关于物体的许多信息，例如其形状和表面纹理。通过对点进行聚类和分析，这些数据提供了足够的对象检测、跟踪或分类信息，在这里你可以看到在点云上执行的检测和分类结果。红点为行人 绿点表示其他汽车，正如你所看到的那样 激光雷达数据提供了用于构建世界视觉表征的足够空间信息。</p><p>计算机视觉技术不仅可以使用摄像头图像进行对象分类，还可以使用点云和其他类型的空间相关数据进行对象分类。</p><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><p>机器学习是使用特殊算法来训练计算机从数据中学习的计算机科学领域。通常 这种学习结果存放在一种被称为“模型”的数据结构中。有很多种模型，事实上 “模型”只是一种可用于理解和预测世界的数据结构。</p><ul><li><p>机器学习涉及使用数据和相关的真值标记来进行模型训练。例如 可能会显示车辆和行人的计算机图像，以及告诉计算机哪个是哪个的标签，我会让计算机学习如何最好地区分两类图像，这类机器学习也称为 <strong>监督式学习</strong>，因为模型利用了人类创造的真值标记</p></li><li><p>你可以设想一个类似的学习过程，但这次使用的是没有真值标记的车辆与行人图像。在这种方法中 我们会让计算机自行决定，哪些图像相似 哪些图像不同，这被称为 <strong>无监督学习</strong>。我们在这不提供真值标记，而是通过分析输入的数据，计算机凭借自行学习找到区别。</p></li><li><p>另一种方法被称为 <strong>“半监督式”学习</strong>。它将监督学习和无监督学习的特点结合在一起，该方法使用少量的标记数据和大量的未标记数据来训练模型。</p></li><li><p><strong>强化学习</strong>  是另一种机器学习，强化学习涉及允许模型通过尝试许多不同的方法来解决问题，然后衡量哪种方法最为成功。计算机将尝试许多不同的解决方案，最终使其方法与环境相适应。</p></li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%BB%83%E4%B9%A0%E9%A2%98.jpg" alt=""></p><p>例如 在模拟器中，强化学习智能体可训练汽车进行右转，智能体将在初始位置发动车辆，然后进行实验性驾驶，以多种不同的方向和速度。如果汽车实际完成了右转，智能体会提高奖励，即得分，这是针对导致成功结果的初始操作。起初 汽车可能无法找到执行转弯的方法，然而 就像人类那样，汽车最终会从一些成功的右转经验中学习，最后学会如何完成任务。</p><h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2><p>人工神经网络是通过数据来学习复杂模式的工具。神经网络由大量的神经元组成，正如人体神经系统的神经元那样，人工神经元负责传递和处理信息，也可以对这些神经元进行训练。</p><p>你可以将一些图像识别为车辆 无论它们是黑是白或大或小，你甚至可能不知道自己如何知道它们是车辆，也许是某些特征触发了你的反应，如车轮、车灯和车窗。</p><p>人工神经网络具有相似的运作方式，通过密集训练 计算机可以辨别汽车、行人、交通信号灯和电线杆。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/how%20know%20a%20car.jpg" alt=""></p><p>当看到该图像时，你的大脑如何工作？你的大脑可能会将图像分为几部分，然后识别特征，如车轮、车窗和颜色 然后 大脑将使用这些特征对图像进行检测和分类。例如 在确定图像是否为汽车时，大脑可能不会认为颜色是关键特征 因为汽车有多种颜色，所以大脑会将更多权重放在其他特征上 并降低颜色的重要性。</p><p>同样地 <strong>神经网络也会从图像中提取许多特征</strong>但这些特征可能是我们人类无法描述或甚至无法理解的特征，但我们最终并不需要理解，计算机将 <strong>调整这些特征的权重</strong>以完成神经网络的最终任务，这就是深层神经网络的思维方式。</p><h2 id="反向传播算法"><a href="#反向传播算法" class="headerlink" title="反向传播算法"></a>反向传播算法</h2><p>我们已经讨论过神经网络如何从数据中“学习”,那么你可能想知道这种学习如何发生。</p><p><strong>学习有时称为训练，它由三步循环组成：前馈、误差测定和反向传播</strong>。</p><ul><li>首先随机分配初始权重，即人工神经元的值。通过神经网络来馈送每个图像 产生输出值，这被称为前馈。</li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/backpropagation.jpg" alt=""></p><ul><li>下一步为误差测定，误差是真值标记与与前馈过程所产生输出之间的偏差。</li><li>最后一步是反向传播，通过神经网络反向发送误差此过程类似前馈过程 只是以相反方向进行。</li></ul><p>每个人工神经元都对其值进行微调，这是基于通过神经网络后向传播的误差。所有这些独立调整的结果 可生成更准确的网络 。</p><p>一个训练周期： 包括前馈、误差测定和反向传播还远远不够，为了训练网络 通常需要数千个这样的周期。但最终结果应该是：模型能够根据新数据做出准确预测。</p><h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><p>卷积神经网络 （CNN） 是 一种人工神经网络， 它对感知问题特别有效。CNN 接受多维输入，包括定义大多数传感器数据的二维和三维形状。</p><p>如果使用标准神经网络对图像进行分类，则需要通过一种方法将图像连接到网络的第一层，这属于一维。标准做法是通过将图像矩阵重塑为一个矢量，并在一个大行中连接所有列 将图像“展开”为一维像素阵列 。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/%E4%B8%80%E7%BB%B4.jpg" alt=""></p><p>然而 这种方法打破了图像中所嵌入的空间信息，如果图像中有车轮，则车轮中的所有像素将散布在整个像素阵列中。但我们知道 这些像素，以二维方式连接形成车轮。如果我们将其散布在一个维度上，神经网络很难从图像中提取车轮。</p><p>CNN 通过维持输入像素之间的空间关系来解决这个问题。具体来说 CNN 通过将过滤器连续滑过图像来收集信息，每次收集信息时，只对整个图像的一小部分区域进行分析，这被称为 “<strong>卷积</strong>”。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/cnn.jpg" alt=""><br>当我们在整个输入图像上对一个过滤器进行“卷积”时，我们将该信息与下一个卷积层相关联。例如 CNN 可以识别第一个卷积层中的基本边缘和颜色信息，然后 通过在第一层上卷积新过滤器，CNN 可以使用边缘和颜色信息，来归纳更复杂的结构 如车轮、车门和挡风玻璃。而另一个卷积可使用车轮、车门和挡风玻璃识别整个车辆。最后 神经网络可使用这一高阶信息对车辆进行分类。</p><p>人们通常不太清楚 CNN 如何解读图像，CNN 有时会侧重于图像中令人惊讶的部分，但这也是深度学习的神奇之处。<strong>CNN 根据其任务查找真正需要的特征，任务可能是图像检测、分类、分割或其他类型的目标</strong>。</p><h2 id="检测与分类"><a href="#检测与分类" class="headerlink" title="检测与分类"></a>检测与分类</h2><p>在感知任务中,首先想到的是<strong>障碍物检测和分类</strong>。</p><p>在驾驶过程中会遇到许多障碍物，静态障碍物包括墙壁、树木、杆子和建筑物。动态障碍物包括行人、自行车和各种汽车。</p><p><strong>计算机首先需要知道这些障碍物的位置，然后对它们进行分类</strong>。在路中行驶的无人驾驶车可能会探测到许多不同的物体，汽车根据所感知的物体类型，来确定路径和速度。如果感知到前方有一辆自行车，汽车可能会决定减速和变道 以便安全驶过自行车。但是 如果感知到前方有另一辆车，并预测到前方车辆也将以接近限速的速度行驶。无人驾驶车可能会保持其速度和车道。</p><p>另一个示例为 <strong>交通信号灯检测分类</strong>。首先 我们将使用计算机视觉对图像中的交通信号灯进行定位。然后 我们可以根据灯光显示颜色对交通信号灯进行分类。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/%E5%88%86%E7%B1%BB.jpg" alt=""></p><p>在无人驾驶车辆中，我们使用什么算法来对障碍物进行检测和分类？我们可以先使用检测 CNN 来查找图像中的对象的位置，在对图像中的对象进行定位后，我们可以将图像发送给另一个 CNN 进行分类。</p><p>我们也可以使用单一 CNN 体系结构对对象进行检测和分类。一种通常的做法为在单个网络体系结构的末端附加几个不同的“头”，一个头可能执行检测，另一个则可能执行分类。</p><p>一个经典的体系结构为 R-CNN 及其变体 Fast R-CNN 和 Faster R-CNN、YOLO 和 SSD 是具有类似形式的不同体系结构。</p><h2 id="tracking跟踪"><a href="#tracking跟踪" class="headerlink" title="tracking跟踪"></a>tracking跟踪</h2><p>在检测完对象后 我们需要追踪它们。</p><p>追踪的意义是什么？如果我们对每个帧中的每个对象进行检测并用边界框对每个对象进行标识。</p><p>那么跨帧追踪对象会带来哪些好处？首先 追踪在检测失败时是至关重要的。如果你在运行检测算法时，对象被其他对象遮挡一部分，则检测算法可能会失败。追踪可以解决遮挡问题。另一个原因在于追踪可以保留身份。障碍物检测的输出为包含对象的边界框，但是 对象没有与任何身份关联，单独使用对象检测时，计算机不知道一个帧中的哪些对象与下一帧中的哪些对象相对应。</p><p>该任务对人类来说很简单 但对汽车来说很困难。追踪的第一步为确认身份，通过查找特征相似度最高的对象，我们将在之前的帧中检测到的所有对象与在当前的帧中检测到的对象进行匹配。对象具有各种特征，有些特征可能基于颜色 而另一些特征可能基于形状，计算机视觉算法可以计算出复杂的图像特征，如局部二值模式和方向梯度直方图。当然 我们也需要考虑连续视频帧中，两个障碍物之间的位置和速度。<strong>由于两个帧之间的对象位置和速度没有太大变化，该信息也可以帮助我们快速找到匹配的对象</strong>。在确定身份后 我们可以使用对象的位置，并结合预测算法以估计在下一个时间步的速度和位置，该预测可帮助我们识别下一帧中的相应对象。</p><h2 id="segmentation-语义分割"><a href="#segmentation-语义分割" class="headerlink" title="segmentation 语义分割"></a>segmentation 语义分割</h2><p>语义分割涉及对图像的每个像素进行分类。它用于尽可能详细地了解环境，并确定车辆可驾驶区域。</p><p>语义分割依赖于一种特殊类型的 CNN，它被称为全卷积网络 或 FCN。FCN 用卷积层来替代传统 CNN 体系结构末端的平坦层。现在 网络中的每一层都是卷积层，因此其名称为“全卷积网络”。</p><p>FCN 提供了可在原始输入图像之上叠加的逐像素输出，我们必须考虑的一个复杂因素是大小。在典型的 CNN 中 经过多次卷积之后，所产生的输出比原始输入图像小得多。</p><p>然而 为了分割像素，输出尺寸必须与原始图像的尺寸相匹配，为了达到该目的 我们可以对中间输出进行上采样处理，直到最终输出的大小与原始输出图像的大小相匹配，网络的前半部分通常被称为编码器。因为这部分网络对输入图像的特征进行了提取和编码，网络的后半部分通常被称为解码器，因为它对这些特征进行了解码 并将其应用于输出。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/fully%20CN.jpg" alt=""></p><h2 id="Apollo-感知"><a href="#Apollo-感知" class="headerlink" title="Apollo 感知"></a>Apollo 感知</h2><p>Apollo 开放式软件栈可感知障碍物、交通信号灯和车道。对于三维对象检测，Apollo 在高精度地图上使用 感兴趣区域 (ROI)来重点关注相关对象。</p><p>Apollo 将 ROI 过滤器应用于点云和图像数据，以缩小搜索范围并加快感知。然后 通过检测网络馈送已过滤的点云，输出用于构建围绕对象的三维边界框，最后 我们使用被称为 <strong>检测跟踪关联</strong> 的算法来跨时间步识别单个对象。</p><p>该算法先保留在每个时间步要跟踪的对象列表，然后在下一个时间步中找到每个对象的最佳匹配。对于交通信号灯的分类,Apollo 先使用高精度地图来确定前方是否存在交通信号灯,如果前方有交通信号灯,则高精度地图会返回灯的位置,这侧重于摄像头搜索范围,在摄像头捕获到交通信号灯图像后,Apollo 使用检测网络对图像中的灯进行定位,然后 Apollo 从较大的图像中提取交通信号灯。Apollo 将裁剪的交通灯图像提供给分类网络，以确定灯颜色。如果有许多灯，则系统需要选择哪些灯与其车道相关。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/detection%20network.jpg" alt=""></p><p>Apollo 使用 <strong>YOLO 网络</strong>，来检测车道线和动态物体。 其中包括车辆、卡车、骑自行车的人和行人，在经过 YOLO 网络检测后，在线检测模块会并入来自其他传感器的数据，对车道线预测进行调整，车道线最终被并入名为“虚拟车道”的单一数据结构中。同样 也通过其他传感器的数据对 YOLO 网络所检测到的动态对象进行调整以获得每个对象的类型、位置、速度和前进方向。虚拟通道和动态对象均被传递到规划与控制模块。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/YOLO.jpg" alt=""></p><h2 id="传感器数据比较"><a href="#传感器数据比较" class="headerlink" title="传感器数据比较"></a>传感器数据比较</h2><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/camera%20radar%20lidar%20compare.jpg" alt=""></p><p><strong>感知通常依赖于摄像头、激光雷达和雷达</strong>。该图显示了这三种传感器的优缺点，绿色代表性能良好，黄色代表混合性能，红色代表性能不佳。</p><ul><li>摄像头非常适用于分类，在 Apollo 中 摄像头主要用于交通信号灯分类 以及车道检测。</li><li>激光雷达的优势在于障碍物检测，即使在夜间 在没有自然光的情况下，激光雷达仍能准确地检测障碍物。</li><li>雷达在探测范围和应对恶劣天气方面占优势</li></ul><p>通过融合这三种传感器的数据，可实现最佳聚合性能，这被称为“传感器融合”</p><h3 id="雷达与激光雷达"><a href="#雷达与激光雷达" class="headerlink" title="雷达与激光雷达"></a>雷达与激光雷达</h3><p>雷达已经在汽车上使用很多年，在各种系统中都需要雷达，如自适应巡航控制、盲点警告、碰撞浸膏和碰撞预防系统等。尽管雷达技术已经成熟，它仍在不断进步，作用不断提升。其他传感器测量速度的方法是计算两次读数之间的差距，而雷达则通过多普勒效应来直接测量速度。多普勒效应根据对象在远离还是接近你，测量出雷达的频率变化。就像消防车警报器一样，当车辆正在远离你和驶向你时，听起来声是不一样的。多普勒效应对传感器融合至关重要。因为它可以把速度作为独立的测量参数，从而提升了融合算法的收敛速度。雷达还可以生成环境的雷达地图，进而实现定位。因为雷达波在坚硬表面会回弹。因此，它可以直接测量对象距离，无需在视线范围内也可以。雷达可以看到其他车辆底部。并发现可能会被阻挡的建筑物和对象。在车上的所有传感器中，雷达是至不容易受雨雾影响的。而且视野宽阔，可达 150 度，距离可达200 多米。与激光雷达和摄像头相比，雷达分辨率较低，尤其是在垂直方向，分辨率非常有限。分辨率低意味着来自静态物体的反射可能产生问题。例如，街道上检修孔盖或汽水罐，可能产生很高的雷达反射率，但他们并不大。我们将其称为雷达杂波。因此，当前的车载雷达通常会忽视静态物体。</p><p>激光雷达是激光探测与测量的简称，而雷达则谁无线电探测与测量的简称。雷达使用无线电波，而激光雷达则使用红激光束来确定传感器和附近对象的距离。目前的激光雷达大多使用 900 纳米光波长度的光源。但部分激光雷达使用的光波长度更长，在雨雾中性能更好。当前的激光雷达使用旋转座架发射激光，扫描周边环境。激光室脉冲式的，脉冲被对象反射，然后返回一个点云，来代表这些物体。激光雷达的空间分辨率远远高于雷达。因为激光束越聚焦，垂直方向的扫描层数量就越多，因此每层的激光雷达的密度也越高。目前，激光雷达还不能直接测量对象的速度，必须使用两次或多次扫描之间的位置差来确定。激光雷达受天气和传感器清洁程度影响也很大，因此需要保持清洁。它们块头也比其他传感器更大，因此也很难安装，除非你只想在车顶安装一个大的激光扫描器。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/radar%20lidar.jpg" alt=""></p><h2 id="感知融合策略"><a href="#感知融合策略" class="headerlink" title="感知融合策略"></a>感知融合策略</h2><p>Apollo 使用激光雷达和雷达来检测障碍物。用于融合输出的主要算法为卡尔曼滤波。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/two%20step%20estimation%20problem.jpg" alt=""></p><p>卡尔曼滤波有两个步骤。第一步为预测状态，第二步是更新测量结果。</p><p>设想我们正在跟踪一名行人，这里的状态表示行人的位置和速度，从已经掌握的行人状态开始。我们使用这些信息来执行卡尔曼滤波的第一步，即预测行人在将来的状态。</p><p>下一步为误差结果更新，我们使用新的传感器来更新我们所认为的行人状态，卡尔曼滤波算法是预测和更新步骤的无限循环。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/fusion%20fuse.jpg" alt=""></p><p>实际上有两种测量结果更新步骤：同步和异步。同步融合同时更新来自不同传感器的测量结果，而异步融合则逐个更新所收到的传感器测量结果。传感器融合可提高感知性能 因为各传感器相辅相成，融合也可以减少跟踪误差，所以我们可以更加确信，对道路上其他物体位置的预测。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;感知&quot;&gt;&lt;a href=&quot;#感知&quot; class=&quot;headerlink&quot; title=&quot;感知&quot;&gt;&lt;/a&gt;感知&lt;/h1&gt;&lt;p&gt;在本课中 我们将首先介绍计算机视觉的基本应用领域，然后我们将介绍机器学习、神经网络和卷积神经网络的基础知识。&lt;/p&gt;
&lt;p&gt;我们将继续讨论感
      
    
    </summary>
    
    
      <category term="self-driving" scheme="https://songjiapo.com/categories/self-driving/"/>
    
    
      <category term="无人驾驶 Apollo" scheme="https://songjiapo.com/tags/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-Apollo/"/>
    
  </entry>
  
  <entry>
    <title>无人驾驶第一课-Lesson 3：定位</title>
    <link href="https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-14-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%203-Location.html"/>
    <id>https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-14-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%203-Location.html</id>
    <published>2018-07-14T14:50:31.000Z</published>
    <updated>2019-11-08T12:50:25.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><p>定位是让无人驾驶车知道自身确切位置的方法,这是一个美妙而富有挑战性的任务.</p><h2 id="定位简介"><a href="#定位简介" class="headerlink" title="定位简介"></a>定位简介</h2><p>现在我们假设你有一张全球的高精度地图，定位的任务是确定你的车辆在这张高精度地图上的位置。</p><p>在我的日常生活中，我一直使用手机 GPS 来确定自己的位置，但 GPS 对于无人驾驶车来说不够精确。<strong>大多数时候，GPS 的精度在1-3米间</strong>，这对于无人驾驶车来说太不精确了。</p><p>在一些情况下比如我们被高楼、山脉围绕或位于峡谷内，GPS 的精度可能只有10 米、甚至只有 50 米。</p><p>由于我们无法完全信任 GPS，因此我们必须找到另一种方法来更准确地确定车辆在地图上的位置。<strong>最常用的方法是将汽车传感器所看到的内容与地图上所显示的内容进行比较</strong>。</p><p>车辆传感器可以测量车辆与静态障碍物之间的距离，如树木、电线杆、路标和墙壁等。我们在车辆自身的坐标系中测量这些距离、这些静态障碍物的方向。随着车辆转弯，车辆自身的坐标系必然与地图坐标系不一致，车辆的坐标和地图坐标系可能均取决于手机导航系统中的设置。</p><p>为估计车辆在地图上的位置，我们将传感器的地标观测值与这些地标在地图上的位置进行匹配。地图自带坐标系，无人驾驶软件必须将传感器的测量值从车辆坐标系转换为地图坐标系，反之亦然。执行这类转换是解决定位问题的关键步骤。</p><p>我来做一个总结：对于定位，车辆将其传感器识别的地标与其高精度地图上存在的地标进行比对。为了进行该比对，必须能够在它自身坐标系和地图坐标系之间转换数据。然后，系统必须在地图上以十厘米的精度确定车辆的精确位置。</p><p>定位提供了许多可供选择的方法，每种方法都有各自的优缺点。<strong>我们将探讨几种常见的无人驾驶车定位方法 如GNSS RTK、惯性导航、LiDAR 定位和视觉定位</strong></p><p>最后 我们将了解 Apollo 框架是如何解决定位问题的。</p><h2 id="Sebastian介绍定位"><a href="#Sebastian介绍定位" class="headerlink" title="Sebastian介绍定位"></a>Sebastian介绍定位</h2><p>什么是定位比如机器人需要知道它在哪里，这包括 X、Y 坐标位置、航向等信息。精确定位，我们要精确到 以准确地知道我们在哪个地方以及我们在车道内的哪个位置。</p><p>为什么要追求精确定位呢？因为如果我们确切地知道我们在哪里，如果没有其他汽车和行人等，我们几乎可以闭着眼开车。</p><p>所以要做一个关于定位的全景图，它将涉及不同类型的传感器也就是我们所谓的惯性感知，此外，还有不同类型的外部传感器包括摄像头、激光雷达等。</p><h2 id="GNSS-RTK"><a href="#GNSS-RTK" class="headerlink" title="GNSS RTK"></a>GNSS RTK</h2><p>如果在野外迷路 你会怎么做？</p><p>假如你看到自己离一棵树 75 米远,你可能在哪里?你只知道自己位于离树 75 米远的地方,更确切地说 你位于一个以树为中心 半径为 75 米的圆上。</p><p>现在你看到了一个离自己 64 米远的房子，你知道自己现在在哪里吗？ 信不信由你 你可能不知道。你知道自己位于两个圆的交点处，但可能有两个交点，你不知道自己位于哪个交点上。</p><p>现在假设你看到了第三个路标，即路灯 经过测量 你发现自己离路灯 55 米远，你总算知道了相对于这些地标的确切位置。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/GNSS%20location.png" alt=""></p><p>如果你有一张地图，里面注明了这些地标在世界上的位置，你就知道了自己在世界上的确切位置,该过程被称为 <strong>三角测量</strong>。</p><p>我们刚刚讲解的示例有两个维度，想象一下 我们试图在地球表面上进行三维定位。我们将使用传送它们与我们之间距离的卫星，而不是我们可以看到的地标，这就是 GPS 的工作原理。</p><p>如果我们在地球上某一处，我们至少需要有多少卫星才能知道我们在哪里？</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/L3_GNSS+RTK.png" alt=""></p><p>答案与二维平面中的问题相同。 然而，实际生活中，GPS 使用另外一颗卫星来确定海拔高度。所以，每时每刻总共有 4 颗卫星确定你的位置。</p><p>GPS 即全球定位系统，这是一种由美国政府开发并在全球范围内运营的卫星导航系统。这类系统的通用名称为全球导航卫星系统或 GNSS。<strong>GPS 是使用最广泛的 GNSS 系统</strong>。</p><ul><li>GPS 分为三部分。第一部分是卫星。在任何特定时间 大约有 30 颗 GPS 卫星在外层空间运行。它们各自距离地球表面约 2 万公里。</li><li>该系统的第二部分由世界各地的控制站组成。控制站用于监视和控制卫星，其主要目的是让系统保持运行，并验证 GPS 广播信号的精确度</li><li>系统的最后一部分是 GPS 接收器。GPS 接收器存在于手机、电脑、汽车、船只以及许多其他设备中。<strong>如果周围没有高楼等障碍物，并且天气良好，那么无论你身在何处，GPS 接收器每次应至少检测到四颗 GPS 卫星</strong>。</li></ul><p>GPS 接收器实际上并不直接探测你与卫星之间的距离，它首先测量信号的飞行时间，也就是说 信号从卫星传播到你的 GPS 接收器需要多长时间？通过将光速乘以这个飞行时间，来计算离卫星的距离。由于光速的值很大，即使是少量的时间误差也会在距离计算中造成巨大的误差。因此 为进一步减小误差 每颗卫星都配备了高精确度的原子钟。</p><p>我们可以使用 <strong>实时运动定位</strong>（或 RTK）。RTK 涉及在地面上建立几个基站，每个基站都知道自己精确的“地面实况”位置。但是 每个基站也通过 GPS 测量自己的位置，已知的“地面实况”位置，与通过 GPS 测量的位置之间的偏差为 GPS 测量结果中的误差.</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/RTK.png" alt=""></p><p>然后 将这个误差传递给其他 GPS 接收器,以供其调整自身的位置计算。<strong>在 RTK 的帮助下，GPS 可以将定位误差限制在 10 厘米以内</strong>。但是 仍存在高楼和其他障碍物可能阻挡 GPS 信号的问题，这使定位变得困难 或根本无法定位。</p><p><strong>GPS 的另一个缺点在于它的更新频率很低，大约为 10 赫兹 或每秒更新 10 次</strong>，由于无人驾驶车在快速移动，我们可能需要更频繁地更新位置。</p><h2 id="惯性导航"><a href="#惯性导航" class="headerlink" title="惯性导航"></a>惯性导航</h2><p>我们来学习一种被称为惯性导航的定位方法。</p><p>假设一辆汽车正以恒定速度直线行驶，如果我为你提供了汽车的初始位置、速度、行驶时长。你可以告诉我汽车现在处于什么位置吗？即从初始位置开始，然后速度乘以时间。<br>$$<br>s=s_0+vt<br>$$</p><p>接下来 让我们尝试一个更难的问题。还是同样的问题 但不是初始位置和速度，而是 我向你提供初始速度和加速度，稍后你能告诉我车辆的速度吗？<br>$$<br>v=v_0+at<br>$$</p><p>我们可以使用加速度、初始速度和初始位置来计算汽车在任何时间点的车速和位置。</p><p>但是 这又引出了另一个问题：我们该如何测量加速度？</p><p>我们需要一个名为三轴加速计的传感器。有三种不同类型的三轴加速度计，它们采用不同的方法，但共同的目标是精确测量加速度。</p><p>然而 加速度计本身，不足以计算我们的位置和速度。加速度计根据车辆的坐标系记录测量结果，我们需要知道如何将这些测量值转换为全局坐标系，这种转换需要另一个名为陀螺仪的传感器。</p><p>三轴陀螺仪的三个外部平衡环一直在旋转，但三轴陀螺仪中的旋转轴始终固定在世界坐标系中，我们计算车辆在坐标系中的位置是通过测量旋转轴和三个外部平衡环的相对位置来计算的。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/gyro.jpg" alt=""></p><p><strong>加速度计和陀螺仪是惯性测量单元 (或 IMU) 的主要组件。IMU 的一个重要特征在于它以高频率更新，其频率可达到 1000 赫兹，所以 IMU 可以提供接近实时的位置信息。</strong></p><p>遗憾的是 <strong>惯性测量单元的缺点在于其运动误差随时间增加而增加，我们只能依靠惯性测量单元，在很短的时间范围内进行定位</strong></p><p>但是 <strong>我们可以结合 GPS 和 IMU 来定位汽车。一方面 IMU 弥补了 GPS 更新频率较低的缺陷，另一方面 GPS 纠正了 IMU 的运动误差。</strong></p><p>但是 即使将 GPS 和 IMU 系统相结合，也不能完全解决我们的定位问题。如果我们在山间行驶，或城市峡谷中，或者最糟糕的是在地下隧道中行驶。那么我们可能会长时间没有 GPS 更新，这会让整个定位面临失败风险。</p><h2 id="LiDAR定位"><a href="#LiDAR定位" class="headerlink" title="LiDAR定位"></a>LiDAR定位</h2><p><strong>利用激光雷达 我们可以通过点云匹配来对汽车进行定位</strong>。该方法将来自激光雷达传感器的检测数据，与预先存在的高精度地图连续匹配。通过这种比较，可获知汽车在高精度地图上的全球位置和行驶方向。</p><p>有许多算法可用于匹配点云。</p><ul><li><strong>迭代最近点</strong>（或 ICP）是一种方法。假设我们想对两次点云扫描进行匹配，对于第一次扫描中的每个点，我们需要找到另一次扫描中最接近的匹配点。最终我们会收集到许多匹配点对，我们把每对点之间的距离误差相加，然后计算平均距离误差。我们的目标是通过点云旋转和平移来最大限度地降低这一平均距离误差，一旦我们最大限度地降低了点云之间的误差，我们就可以在传感器扫描和地图之间找到匹配，我们将通过传感器扫描到的车辆位置转换为全球地图上的位置，并计算出在地图上的精确位置。</li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/iterative%20closest%20point.jpg" alt=""></p><ul><li>滤波算法是另一种LiDAR 定位方法。滤波算法可消除冗余信息，并在地图上找到最可能的车辆位置。Apollo 使用了 <strong>直方图滤波算法</strong>，该方法有时也被称为 <strong>误差平方和算法（或 SSD）</strong>。为了应用直方图滤波，我们将通过传感器扫描的点云滑过地图上的每个位置。在每个位置我们计算扫描的点与高精度地图上的对应点之间的误差或距离，然后对误差的平方求和。求得的和越小，扫描结果与地图之间的匹配越好。该示例显示一些对齐较好的点 以红色表示，以及一些对齐较差的点 以蓝色表示。在该示例中 绿色表示中等对齐。</li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/histogram%20filter.jpg" alt=""></p><ul><li><strong>卡尔曼滤波</strong>是另一种LiDAR 定位方法。卡尔曼滤波是一种算法,用于根据我们在过去的状态和新的传感器测量结果预测我们当前的状态。具体来说 卡尔曼滤波使用了预测更新周期。首先 我们根据之前的状态以及对移动距离和方向的估计，来估计或“预测”我们的新位置。当然 我们的运动估计并不完美，所以需要通过使用传感器测量我们的位置并加以纠正。<br>一旦用传感器测量了我们的新位置，我们便可以使用概率规则 ，将也不完美的传感器测量结果与我们现有的位置预测结合起来，我们会永远遵循这个预测更新周期，只要我们需要对车辆进行定位，先预测我们的新位置 然后用传感器测量我们的位置。</li></ul><p><strong>LiDAR 定位的主要优势在于稳健性</strong>。只要从高精度地图开始 并且存在有效的传感器，我们就始终能够进行定位。</p><p><strong>主要缺点在于难以构建高精度地图,并使其保持最新</strong>。事实上 几乎不可能让地图完全保持最新，因为几乎每个地图均包含瞬态元素，汽车和行人 甚至停放的汽车，在我们下次驾车驶过时都会消失，街道上的垃圾会被吹走，世界上的许多元素都在不断发生变化。</p><h2 id="视觉定位"><a href="#视觉定位" class="headerlink" title="视觉定位"></a>视觉定位</h2><p>图像是要收集的最简单的数据类型。摄像头便宜且种类繁多，还易于使用，我们可以使用图像来定位汽车吗？</p><p>通过图像实现精确定位非常困难，实际上 摄像头图像通常与来自其他传感器的数据相结合，以准确定位车辆。但 <strong>将摄像头数据与地图和 GPS 数据相结合比单独使用摄像头图像进行定位的效果更好</strong>。</p><p>假设一辆车正在路上行驶 它感知到右边有一棵树，但是 地图显示道路右侧有几棵树，全部位于不同的位置，我们如何知道车辆现在看到哪棵树？</p><p>我们可以用概率来解决这个问题。想象一下 我们位于道路上许多不同点中的任意一点处，使用概率来确定哪个点，最可能代表我们的实际位置。</p><p>我们知道在右边看到一棵树，我们假设从一些点可以看到右边有一棵树 而从另一些点则看不到，当然 我们很可能位于可以看到右边有一棵树的地方。我们可以排除在地图上无法看到右边那棵树的点。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/particle%20filter%201.jpg" alt=""></p><p>我们可以在开车的同时继续观察周边世界。想象一下 我们开车前行 然后观察到右边的另一棵树。在观察地图上的其余点之后。我们发现仅在少数几个位置，会发现车辆右侧有成排的两棵树，我们当然最有可能位于这些位置之一，所以我们可以排除所有其他位置。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/particle%20filter%202.jpg" alt=""></p><p>我们继续该过程 通过观察结果、概率和地图来确定我们最可能的位置。<strong>该过程被称为粒子滤波</strong>。</p><p>因为我们使用粒子或点来估计最可能的位置,当然 树木在许多道路上比较稀少，但是 车道线在许多道路上却很常见，可以使用相同的粒子滤波原理对车道线进行拍照，然后使用拍摄的图像来确定车辆在道路中的位置。可以将道路摄像头图像与地图进行比较，我们的摄像头图像与地图的某些部分匹配得很好，但与地图的其他部分匹配得没那么好。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/lane%20detection.jpg" alt=""></p><p>这是视觉车道线匹配的一个示例。蓝色代表地图上两个不同位置的车道线。我们想确定哪个位置更有可能是我们所处的位置。红色代表车辆摄像头观察到的车道线，红线与右侧蓝线的匹配度要比与左侧蓝线的匹配度高得多，因此 我们更有可能位于与右侧图像对应的地图位置上。</p><p><strong>视觉定位的优点在于图像数据很容易获得，缺点在于缺乏三维信息和对三维地图的依赖。</strong></p><h2 id="Apollo定位"><a href="#Apollo定位" class="headerlink" title="Apollo定位"></a>Apollo定位</h2><p>Apollo 使用基于 GPS、IMU 和激光雷达的多传感器融合定位系统。这种融合方法利用了不同传感器的互补优势，它也提高了稳定性和准确性，</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/appllo%20kalman%20filter.jpg" alt=""></p><p>Apollo 定位模块依赖于 IMU、GPS、激光雷达、雷达和高精度地图。这些传感器同时支持 GNSS 定位和LiDAR 定位。GNSS 定位输出位置和速度信息，LiDAR 定位输出位置和行进方向信息。</p><p>融合框架通过卡尔曼滤波将这些输出结合在一起，卡尔曼滤波建立在两步预测测量周期之上。在 Apollo 中 惯性导航解决方案用于卡尔曼滤波的预测步骤，GNSS 和 LiDAR 定位用于卡尔曼滤波的测量结果更新步骤。</p><p>点击 <a href="https://classroom.udacity.com/courses/cs373/lessons/48723604/concepts/486709880923" target="_blank" rel="noopener">这里</a> 了解卡尔曼滤波的工作原理。</p><p>关于 Apollo 定位的论文，可以查阅 “<a href="https://arxiv.org/pdf/1711.05805.pdf" target="_blank" rel="noopener">Robust and Precise Vehicle Localization based on Multi-sensor Fusion in Diverse CityScenes, ICRA, 2018</a>”.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定位&quot;&gt;&lt;a href=&quot;#定位&quot; class=&quot;headerlink&quot; title=&quot;定位&quot;&gt;&lt;/a&gt;定位&lt;/h1&gt;&lt;p&gt;定位是让无人驾驶车知道自身确切位置的方法,这是一个美妙而富有挑战性的任务.&lt;/p&gt;
&lt;h2 id=&quot;定位简介&quot;&gt;&lt;a href=&quot;#定位简介
      
    
    </summary>
    
    
      <category term="self-driving" scheme="https://songjiapo.com/categories/self-driving/"/>
    
    
      <category term="无人驾驶 Apollo" scheme="https://songjiapo.com/tags/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-Apollo/"/>
    
  </entry>
  
  <entry>
    <title>无人驾驶第一课-Lesson 2：高精度地图</title>
    <link href="https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-12-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%202-HD%20Maps.html"/>
    <id>https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-12-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%202-HD%20Maps.html</id>
    <published>2018-07-12T08:25:45.000Z</published>
    <updated>2019-11-08T12:50:25.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高精度地图"><a href="#高精度地图" class="headerlink" title="高精度地图"></a>高精度地图</h1><h2 id="导航地图-Navigation-Map-VS高精度地图-HD-Map"><a href="#导航地图-Navigation-Map-VS高精度地图-HD-Map" class="headerlink" title="导航地图(Navigation Map)VS高精度地图(HD Map)"></a>导航地图(Navigation Map)VS高精度地图(HD Map)</h2><p>高精度地图是当前无人驾驶车技术不可或缺的一部分。</p><p>高精度地图包含大量的驾驶辅助信息，最重要的信息是道路网的精确三维表征。<br>例如 ：交叉路口布局和路标位置。高精度地图还包含很多语义信息，地图可能会报告交通灯上不同颜色的含义，它也可能指示道路的速度限制<br>以及左转车道开始的位置。</p><p>高精度地图最重要的特征之一是精度。手机上的导航地图只能达到米级精度，高精度地图使车辆能够达到厘米级的精度，这对确保无人驾驶车辆的安全性至关重要</p><h2 id="地图与定位"><a href="#地图与定位" class="headerlink" title="地图与定位"></a>地图与定位</h2><p>可以将定位与拼图进行比较。如果我同时为你提供地图和同一张地图的一小块，你能否在地图上找到这一小块的确切位置？试一试，<br>正如拼图游戏那样。无人驾驶车辆需要知道它在地图上的确切位置，首先 车辆可能会寻找地标。我们可以使用从各类传感器收集的数据<br>，如摄像机图像数据以及激光雷达收集的三维点云数据来查找地标。车辆将其收集的数据与其高精度地图上的已知地标进行比较.</p><p> 这一匹配过程是需要预处理、坐标转换和数据融合的复杂过程 。</p><ul><li>预处理消除了不准确或质量差的数据,</li><li>坐标变换将来自不同视角的数据转换为统一的坐标系</li><li>借助数据融合 可将来自各种车辆和传感器的数据合并</li></ul><p>一旦无人驾驶车高度精确地确定了其位置,定位任务也就完成了. 整个定位过程取决于地图.</p><p>正因为如此 车辆需要高精度地图 以便知道它处于什么位置</p><h2 id="地图与感知"><a href="#地图与感知" class="headerlink" title="地图与感知"></a>地图与感知</h2><ul><li><p>无人驾驶车也可以使用高精度地图来帮助感知。人有眼睛和耳朵，但都有距离限制，我们无法看到或听到太远的事物。无人驾驶汽车的传感器也会受到类似限制<br>摄像机、激光雷达和雷达探测物体的能力，在超过一定距离后都会受到限制。在恶劣的天气条件下或在夜间，传感器识别障碍物的能力可能会受到进一步限制<br>另外 当汽车遇到障碍物时，传感器无法透过障碍物来确定障碍物后面的物体。在这种情况下 高精度地图有很大帮助。即使传感器尚未检测到交通信号灯<br>它也可以将交通信号灯的位置提供给软件栈的其余部分，这可以帮助汽车做下一个决策。</p></li><li><p>另一个好处在于 地图可帮助传感器缩小检测范围。例如 高精度地图可能会告知我们，在特定位置寻找停车标志。传感器就可以集中在该位置检测停车标志。<br>这被称为感兴趣区域或 ROI，ROI 可帮助我们提高检测精确度和速度，并节约计算资源。</p></li></ul><h2 id="地图与规划"><a href="#地图与规划" class="headerlink" title="地图与规划"></a>地图与规划</h2><p>正如定位和感知软件依赖于高精度地图那样，规划软件也是如此。</p><p>高精度地图可帮助车辆找到合适的行车空间，它还可以帮助规划器确定不同的路线选择，并帮助预测软件预测道路上其他车辆在将来的位置。</p><p>例如 高精度地图可帮助车辆识别车道的确切中心线，这样车辆可以尽可能地靠近中心行驶。</p><p>在具有低速限制、人行横道或减速带的区域，高精度地图使车辆能够提前查看 并预先减速</p><p>更重要的是 如果前方有障碍物，车辆可能需要变道，高精度地图可帮助车辆缩小选择范围，以便选择最佳方案。</p><h2 id="appllo高精度地图"><a href="#appllo高精度地图" class="headerlink" title="appllo高精度地图"></a>appllo高精度地图</h2><p>高精度地图的构建由五个过程组成：数据采集、数据处理、对象检测、手动验证和地图发布.</p><ul><li><p><strong> 数据采集 </strong> 是一项庞大的密集型任务.无人驾驶车需要其地图始终保持最新状态。大量的调查车辆可确保每次道路发生改变时<br>，地图均会得到快速更新。调查车辆使用了多种传感器 如 GPS、惯性测量单元、激光雷达和摄像机。Apollo 定义了一个硬件框架<br>将这些传感器集成到单个自主系统中，通过支持多种类的传感器，Apollo 可以收集各类数据，将这些数据融合，最终生成高精度地图。</p></li><li><p>数据处理指的是 Apollo 如何对收集到的数据进行整理、分类和清洗以获得没有任何语义信息或注释的初始地图模板</p></li><li><p>对于对象检测 Apollo 团队使用人工智能来检测静态对象，并对其进行分类，其中包括车道线、交通标志 甚至是电线杆</p></li><li><p>手动验证可确保自动地图创建过程正确进行并及时发现问题。Apollo 软件使手动验证团队能够高效标记和编辑地图。</p></li><li><p>在经过数据采集、数据处理、对象检测和手动验证之后 地图即可发布。除发布高精度地图外，Apollo 还发布了采用自上而下视图<br>的相应定位地图以及三维点云地图</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;高精度地图&quot;&gt;&lt;a href=&quot;#高精度地图&quot; class=&quot;headerlink&quot; title=&quot;高精度地图&quot;&gt;&lt;/a&gt;高精度地图&lt;/h1&gt;&lt;h2 id=&quot;导航地图-Navigation-Map-VS高精度地图-HD-Map&quot;&gt;&lt;a href=&quot;#导航地图-Na
      
    
    </summary>
    
    
      <category term="self-driving" scheme="https://songjiapo.com/categories/self-driving/"/>
    
    
      <category term="无人驾驶 Apollo" scheme="https://songjiapo.com/tags/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-Apollo/"/>
    
  </entry>
  
  <entry>
    <title>无人驾驶第一课-Lesson 1：无人驾驶概览</title>
    <link href="https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-11-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%201-%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E6%A6%82%E8%A7%88.html"/>
    <id>https://songjiapo.com/Self-Driving%20Car%20Fundamentals-Featuring%20Apollo/2018-07-11-Self-Driving%20Car%20Fundamentals-Featuring%20Apollo-lesson%201-%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E6%A6%82%E8%A7%88.html</id>
    <published>2018-07-11T11:50:15.000Z</published>
    <updated>2019-11-08T12:50:25.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="无人驾驶概览"><a href="#无人驾驶概览" class="headerlink" title="无人驾驶概览"></a>无人驾驶概览</h1><p>Udacity无人驾驶项目负责人David Silver 表示： “在全球无人驾驶技术人才奇缺的宏观现实下，如果你对无人驾驶汽车感兴趣，或者有志于从事无人驾驶开发的工作，现在就是最好的时机</p><h2 id="你将学到什么"><a href="#你将学到什么" class="headerlink" title="你将学到什么"></a>你将学到什么</h2><p> Apollo 无人驾驶开源平台的主要部分</p><ul><li><p>high-definition maps 高精度地图</p><p>无人驾驶车的核心模块——高精度地图，几乎支持着软件栈的所有其他模块，包括定位、感知、预测和规划</p></li><li><p>localization 定位</p><p>在定位课程中，将讨论汽车如何确定它所处的位置。这比预想得更难！汽车利用激光和雷达数据，将这些传感器感知内容与高分辨率地图进行对比，这种对比使汽车能够以个位数厘米级精度进行自定位</p></li><li><p>perception 感知</p><p>在感知课程中，将了解无人驾驶车如何感知这个世界。深度学习是一个重要且强有力的感知工具，卷积神经网络构成深度学习分支，对感知任务至关重要。如分类、检测和分割，这些方法适用于几种不同无人驾驶车传感器的数据来源，包括摄像头、雷达和激光雷达</p></li><li><p>prediction 预测</p><p>我们将概述几种不同的方式，用于预测其他车辆或行人可能如何移动。一种方法称为递归神经网络。可对其他物体随时间的运动进行跟踪，并使用该时间序列数据预测未来</p></li><li><p>planning 规划</p><p>规划课程将涵盖如何将预测与路线相结合以生成车辆轨迹，规划是构建无人驾驶车最困难的部分之一</p></li><li><p>control 控制</p><p>控制课程展示了如何使用转向、油门和制动来执行规划轨迹。我们将阐释几种不同类型的控制器，类型从简单到愈加复杂，而性能却从弱到强</p><p>希望：在完成这门课时，你将了解无人驾驶车的基本工作原理。我希望你开始这段学习之旅时，像我第一次开始学习无人驾驶车时那样激动</p><h3 id="Apollo核心模块"><a href="#Apollo核心模块" class="headerlink" title="Apollo核心模块"></a>Apollo核心模块</h3><p>在课程开始之前, 你可以先阅读Github中以下模块的Readme, 来对无人驾驶技术的架构有一个总体的了解~</p></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/localization/README_cn.md" target="_blank" rel="noopener">定位</a></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/perception/README_cn.md" target="_blank" rel="noopener">感知</a></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/prediction/README_cn.md" target="_blank" rel="noopener">预测</a></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/routing/README_cn.md" target="_blank" rel="noopener">路由</a></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/planning/README_cn.md" target="_blank" rel="noopener">规划</a></li><li><a href="https://github.com/ApolloAuto/apollo/blob/master/modules/control/README_cn.md" target="_blank" rel="noopener">控制</a></li></ul><h2 id="为什么我们需要无人驾驶车？"><a href="#为什么我们需要无人驾驶车？" class="headerlink" title="为什么我们需要无人驾驶车？"></a>为什么我们需要无人驾驶车？</h2><p>最重要的原因是安全</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/compare%20human%20and%20self%20driving.png" alt="比较"></p><h3 id="无人车等级划分"><a href="#无人车等级划分" class="headerlink" title="无人车等级划分"></a>无人车等级划分</h3><p>汽车工程师已建立并确定了 6 个等级的无人驾驶车<br><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%9A%84%E5%88%86%E7%BA%A7%E6%AF%94%E8%BE%83.jpg" alt="自动驾驶等级划分]"></p><ul><li>0 级为基本等级，驾驶员是系统的唯一决策者</li><li>1 级为驾驶员辅助，车辆为驾驶员提供转向或加速支持如巡航控制</li><li>2 级为部分自动化，车辆自动控制几项功能如自动巡航控制和车道保持</li><li>3 级为有条件的自动化，车辆自主驾驶</li><li>4 级为高度自动化，车辆控制、驾驶方面不期望驾驶员的介入</li><li>5 级为最高级别，完全自动化，应与人类驾驶员的水平一样高或比其更高</li></ul><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/SAE%20autonomy%20levels.png" alt="sae autonomy levels"></p><h2 id="How-self-driving-cars-work"><a href="#How-self-driving-cars-work" class="headerlink" title="How self-driving cars work"></a>How self-driving cars work</h2><p>无人驾驶车包括五个核心部件<br><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/how%20a%20self-driving%20car%20works.png" alt=""></p><ul><li><strong>计算机视觉</strong> 就是我们通过摄像头图像弄清楚我们周围的世界是怎样的</li><li><strong>传感器融合</strong> 是我们合并来自其他传感器的数据， 如激光和雷达，从而更加深入地了解我们周围的环境</li><li>只要我们对周围的世界有了深刻的理解，就可以使用 <strong>定位</strong> 来精确地确定我们在那个世界所处的位置</li><li>弄清楚where we are in the world and what the world looks like，就可以使用 <strong>路径规划</strong> 来绘制路线</li><li><strong>控制</strong> 就是我们为了让汽车沿着我们在路径规划期间建立的轨道，如何转动方向盘并打开油门 然后踩刹车</li></ul><h2 id="Apollo-技术框架由四个层面组成"><a href="#Apollo-技术框架由四个层面组成" class="headerlink" title="Apollo 技术框架由四个层面组成"></a>Apollo 技术框架由四个层面组成</h2><p>参考车辆平台、参考硬件平台、开源软件平台和云服务平台</p><h2 id="参考车辆与硬件平台"><a href="#参考车辆与硬件平台" class="headerlink" title="参考车辆与硬件平台"></a>参考车辆与硬件平台</h2><p>如果我们想要打造一辆无人驾驶车。首先要开发一款可通过电子控制的基础车辆，而不仅仅是通过实体方向盘、油门踏板和刹车踏板来控制，这种类型的车辆具有特殊的名称：<strong>线控驾驶车辆</strong></p><p>Apollo 无人驾驶车有几个不同的传感器。</p><ul><li>控制器区域网络（或 CAN），是车辆的内部通信网络，计算机系统通过 CAN 卡连接汽车内部网络，发送加速、制动和转向信号。</li><li>全球定位系统（或 GPS），通过绕地卫星接收信号，这些信号可帮助我们确定所处位置。</li><li>惯性测量装置（或 IMU），测量车辆的运动和位置，是通过跟踪位置、速度、加速度和其他因素。</li><li>激光雷达 (LiDAR) 由一组脉冲激光器组成Apollo 使用的激光雷达可 360 度扫描车辆周围，这些激光束的反射形成了软件可用于了解环境的点云</li><li>摄像头捕获图像数据，我们可以使用计算机视觉来提取这些图像的内容并了解周围的环境。例如 因为摄像头可以感知颜色，我们用它们来检测和了解交通灯</li><li>雷达也用于检测障碍物，雷达分辨率低，难以分辨雷达检测到了哪种障碍物，但雷达的优势在于经济实惠，适用于各种天气和照明条件，雷达特别擅长测量其他车辆的速度。</li></ul><p>下图说明如何将主要硬件组件安装到车辆上,包括摄像头、雷达、激光雷达、GPS-IMU 和 IPC<br><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/applo%20hardware.png" alt=""></p><h2 id="开源软件栈"><a href="#开源软件栈" class="headerlink" title="开源软件栈"></a>开源软件栈</h2><p>软件层分为三个子层:<strong>实时操作系统(real-time operating system(ROTS))</strong>、<strong>运行时框架(Runtime Framework)</strong> 和 <strong>应用程序模块层(a layer of application modules)</strong></p><p><strong>实时操作系统（或 RTOS）</strong>可确保在给定时间内完成特定任务。“实时”是指无人驾驶车的操作系统能够及时进行计算、分析并执行相应的操作。实时性能是确保系统稳定性和驾驶安全性的重要要求。</p><p>Apollo RTOS 是 Ubuntu Linux 操作系统与 Apollo 内核相互结合的成果。Ubuntu 是业内顶级 Linux 发行版之一，也是最流行的云操作系统，然而 原始 Ubuntu 系统并非实时操作系统，通过加入 Apollo 设计的内核 我们可以使其成为一个 RTOS。</p><p><strong>运行时框架</strong> 是 Apollo 的操作环境它是 ROS（机器人操作系统）的定制版，ROS 实际上是一个在 Apollo RTOS 上运行的软件框架。ROS 在机器人行业有着悠久的历史，目前有 3,000 多个基础库支持应用程序的快速开发，ROS 根据功能将自治系统划分为多个模块，每个模块负责接收、处理和发布自己的消息。由于这些模块相互独立 只能通过运行时框架进行通信，因此调整任何单一模块都很容易。ROS 是应用最广泛的机器人框架，因此它所包含的模块涉及许多最新的研究突破，所有这些功能使 ROS 成为理想的 Apollo 开发与集成框架。</p><p><strong>为使 ROS 适应无人驾驶车，Apollo 团队改进了共享内存的功能和性能、去中心化和数据兼容性</strong></p><ul><li><strong>共享内存</strong>降低了需要访问不同模块时的数据复制需求。</li></ul><p>对于一对多传输方案，共享内存支持“一次写入 多次读取”模式。例如 如果你只收到一次点云 你可以同时运行障碍物检测、定位和 GUI 工具。这可以加快通信速度</p><ul><li><strong>去中心化</strong> 解决了单点故障问题</li></ul><p>现成的 ROS 由许多节点组成,每个节点都有对应的功能。例如 一个节点可能负责收集摄像头图像，另一个节点可能负责规划轨迹，而第三个节点可能负责将控制命令发送到 CAN 总线上的车辆，但是所有这些节点都需要由单个 ROS 主节点来控制。如果这个主节点发生故障，整个系统都会失效。</p><p>为了避免这个问题，Apollo 将所有节点放在一个公共域中，域中的每个节点都有关于域中其他节点的信息，通过这种去中心化方案，公共域取代了原来的 ROS 主节点，因此消除了单点故障风险。</p><ul><li>对于无人驾驶车来说 由于项目本身的规模很大，<strong>数据兼容性</strong> 至关重要</li></ul><p>不同的 ROS 节点通过,名为 ROS 消息的接口语言相互通信。ROS 消息需要使用通用接口语言，使每个节点都可以解读来自其他节点的消息数据。如果消息文件的格式，与节点所期望的格式稍有不同，通信会失败，这可能会导致严重的兼容性问题。例如 当一个接口升级时，数据不兼容通常会导致系统故障。此外 必须一次又一次地转换之前所记录的测试数据， 以适应新的消息格式。</p><p><strong>为了解决这个问题，Apollo 团队使用另一种名为 protobuf 的接口语言，来替代原生 ROS 消息。Protobuf 是一种结构化数据序列化方法</strong>. 这对开发用于通过电线彼此通信，或用于存储数据的程序非常有用。你可以将新字段添加到消息格式中 而不会破坏后向兼容性，新的二进制文件可以在解析过程中接受旧的消息格式。向 ROS 添加 protobuf 格式有助于 Apollo 的长期发展。</p><ul><li><strong>应用程序模块</strong></li></ul><p>Apollo 的软件平台具有各种模块，这些模块包括 MAP 引擎、定位、感知、规划、控制、端到端驾驶以及人机接口（或 HMI）。每个模块都有自己的算法库，模块之间的关系非常复杂。后续将在整个课程中对这些模块及其关联方式进行研究</p><h2 id="云服务"><a href="#云服务" class="headerlink" title="云服务"></a>云服务</h2><p><strong>Apollo 云服务包含高精度地图(HD Maps)、仿真环境(Simulation)、数据平台(Data Platform)、安全(Security)、软件升级(OTA)以及被称为 DuerOS 的智能语音系统</strong></p><p>在这里 我们将重点介绍仿真和数据平台。</p><ul><li><strong>仿真环境平台</strong>是 Apollo 开放软件栈的重要工具</li></ul><p>该平台允许每个人出于自身需要 来构建仿真环境。该平台还聚合了大量驾驶数据，使开发人员能够检验和验证无人驾驶软件系统。仿真环境使 Apollo 车辆不仅可以查看环境，还可以了解道路情况和场景。</p><p>仿真环境平台具有许多功能。首先，仿真环境平台允许开发人员配置不同的驾驶场景，比如障碍物，路线和交通灯状态。执行模式为开发人员提供了一个在多个场景中运转的完整设置。在执行模式中 ，开发人员可以在 Apollo 环境中上传和验证模块。当前的自动评分系统，从几个指标对场景进行评估。其中包括：碰撞检测、交通灯识别、速度限制、障碍物检测和路线逻辑。最后，三维可视化描述了实时路况。在显示无人驾驶车状态的同时，使模块输出可视化。</p><ul><li>数据对无人驾驶车来说很重要。无人驾驶数据可能来自模拟场景或道路测试，Apollo 为这些类别提供了各种各样的数据。</li></ul><p>仿真场景数据有两个不同的来源：记录场景和虚拟场景。我们可以使用记录的场景，来重放我们在实际道路测试中已经观察到的传感器数据，我们可以借助虚拟场景 使用虚拟编辑器创建新的驾驶场景，这有助于快速检验与验证算法。为了训练像深度学习网络那样的机器学习模型，我们需要带标签的注释数据，其中包括交通信号灯数据，带边界框的障碍物数据，以及语义分割数据。</p><p>此外 Apollo 已向公众发布了 ApolloScape 数据集。ApolloScape 涵盖了各种复杂路况，ApolloScape 在单个图像中列入并注释了，多达 162 辆车或 80 名行人。同时 开放数据集使用语义分割对图像进行逐像素标记，这使得 ApolloScape 成为世界上最为复杂又最精确的无人驾驶数据集。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;无人驾驶概览&quot;&gt;&lt;a href=&quot;#无人驾驶概览&quot; class=&quot;headerlink&quot; title=&quot;无人驾驶概览&quot;&gt;&lt;/a&gt;无人驾驶概览&lt;/h1&gt;&lt;p&gt;Udacity无人驾驶项目负责人David Silver 表示： “在全球无人驾驶技术人才奇缺的宏观现实下，
      
    
    </summary>
    
    
      <category term="self-driving" scheme="https://songjiapo.com/categories/self-driving/"/>
    
    
      <category term="无人驾驶 Apollo" scheme="https://songjiapo.com/tags/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-Apollo/"/>
    
  </entry>
  
  <entry>
    <title> 深度学习框架（Deep Learning frameworks）-吴恩达 深度学习 course2 3.10笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-21-course2-Week3-10-deep%20learning%20frameworks.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-21-course2-Week3-10-deep%20learning%20frameworks.html</id>
    <published>2018-05-21T02:20:23.000Z</published>
    <updated>2019-11-08T12:50:25.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-10-深度学习框架（Deep-Learning-frameworks）"><a href="#3-10-深度学习框架（Deep-Learning-frameworks）" class="headerlink" title="3.10 深度学习框架（Deep Learning frameworks）"></a>3.10 深度学习框架（Deep Learning frameworks）</h1><p>我认为现在深度学习已经很成熟了，利用一些深度学习框架会更加实用，会使你的工作更加有效，那就让我们来看下有哪些框架。</p><ul><li>Caffe / Caffe 2</li><li>CNTK</li><li>DL4J</li><li>Keras</li><li>Lasagne</li><li>mxnet</li><li>PaddlePaddle</li><li>TensorFlow</li><li>Theano</li><li>Torch</li></ul><h2 id="选择框架的标准"><a href="#选择框架的标准" class="headerlink" title="选择框架的标准"></a>选择框架的标准</h2><ul><li>便于编程：包括神经网络的开发和迭代、配置产品；</li><li>运行速度：特别是训练大型数据集时；</li><li>是否真正开放：不仅需要开源，而且需要良好的管理，能够持续开放所有功能。</li></ul><h1 id="3-11-TensorFlow"><a href="#3-11-TensorFlow" class="headerlink" title="3.11 TensorFlow"></a>3.11 TensorFlow</h1><p>有很多很棒的深度学习编程框架，其中一个是TensorFlow</p><p>Tensorflow 框架内可以直接调用梯度下降算法，极大地降低了编程人员的工作量。例如</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/tensorflow%20code%20example.png" alt="tensorflow code example"></p><ul><li><p>Writing and running programs in TensorFlow has the following steps:</p><ul><li>Create Tensors (variables) that are not yet executed/evaluated.</li><li>Write operations between those Tensors.</li><li>Initialize your Tensors.</li><li>Create a Session.</li><li>Run the Session. This will run the operations you’d written above.</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import tensorflow as tf</span><br><span class="line"></span><br><span class="line">cofficients = np.array([[1.],[-20.],[25.]])</span><br><span class="line"></span><br><span class="line">w = tf.Variable(0,dtype=tf.float32)</span><br><span class="line"></span><br><span class="line">x = tf.placeholder(tf.float32,[3,1])</span><br><span class="line"># cost = tf.add(tf.add(w**2,tf.multiply(- 10.,w)),25)</span><br><span class="line"># Tensorflow 重载了加减乘除符号</span><br><span class="line">cost = x[0][0]*w**2 + x[1][0]*w + x[2][0]</span><br><span class="line"></span><br><span class="line"># 改变下面这行代码，可以换用更好的优化算法</span><br><span class="line">train = tf.train.GradientDescentOptimizer(0.01).minimize(cost)</span><br><span class="line"># 下面的几行是惯用表达式:</span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line"></span><br><span class="line">session = tf.Session()#这样就开启了一个TensorFlow session。</span><br><span class="line">session.run(init)#来初始化全局变量。</span><br><span class="line">print(session.run(w))</span><br><span class="line"># with tf.Session() as session:</span><br><span class="line">#   session.run(init)</span><br><span class="line">#   print(session.run(w))    </span><br><span class="line"></span><br><span class="line">for i in range(1000):</span><br><span class="line">    session.run(train, feed_dict=(x:coefficients))</span><br><span class="line">print(session.run(w))</span><br></pre></td></tr></table></figure><ul><li>一旦被称为TensorFlow变量，平方，乘法和加减运算都重载了</li><li>with 语句适用于对资源进行访问的场合，确保不管使用过程中是否发生异常都会执行必要的“清理”操作，释放资源，比如文件使用后自动关闭、线程中锁的自动获取和释放等。</li><li>TensorFlow中的placeholder是一个你之后会赋值的变量，这种方式便于把训练数据加入损失方程</li><li>当你运行训练迭代，用feed_dict来让x=coefficients。如果你在做mini-batch梯度下降，在每次迭代时，你需要插入不同的mini-batch，那么每次迭代，你就用feed_dict来喂入训练集的不同子集，把不同的mini-batch喂入损失函数需要数据的地方。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3-10-深度学习框架（Deep-Learning-frameworks）&quot;&gt;&lt;a href=&quot;#3-10-深度学习框架（Deep-Learning-frameworks）&quot; class=&quot;headerlink&quot; title=&quot;3.10 深度学习框架（Deep L
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>Softmax 回归（Softmax regression）-吴恩达 深度学习 course2 3.8~3.9笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-16-course2-Week3-8-%E5%A4%9A%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-16-course2-Week3-8-%E5%A4%9A%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98.html</id>
    <published>2018-05-12T11:51:31.000Z</published>
    <updated>2019-11-08T12:50:25.591Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-8-Softmax-回归（Softmax-regression）"><a href="#3-8-Softmax-回归（Softmax-regression）" class="headerlink" title="3.8 Softmax 回归（Softmax regression）"></a>3.8 Softmax 回归（Softmax regression）</h1><p>目前为止，介绍的分类例子都是二分类问题：神经网络输出层只有一个神经元，表示预测输出 y^是正类的概率 P(y = 1|x)，y &gt; 0.5 则判断为正类，反之判断为负类。</p><p>对于<strong>多分类问题</strong>，用 C 表示种类个数，则神经网络输出层，也就是第 L 层的单元数量 n[L]=C。每个神经元的输出依次对应属于该类的概率，即 P(y=c|x),c=0,1,..,C−1。有一种 Logistic 回归的一般形式，叫做 <strong>Softmax 回归</strong>，可以处理多分类问题。</p><p>对于 Softmax 回归模型的输出层，即第 L 层，有：</p><p>$$<br>Z^{[L]} = W^{[L]}a^{[L-1]} + b^{[L]}<br>$$</p><p>$$<br>a^{[L]}_i = \frac{e^{Z^{[L]}<em>i}}{\sum^C</em>{i=1}e^{Z^{[L]}_i}}<br>$$</p><p>为输出层每个神经元的输出，对应属于该类的概率，满足：</p><p>$$<br>\sum^C_{i=1}a^{[L]}_i = 1<br>$$<br>简单来说就是用临时变量t将它归一化，使总和为1。一个直观的计算例子如下：</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/softmax%20layer.png" alt="softmax layer"></p><h1 id="3-9-训练一个-Softmax-分类器（Training-a-Softmax-classifier）"><a href="#3-9-训练一个-Softmax-分类器（Training-a-Softmax-classifier）" class="headerlink" title="3.9 训练一个 Softmax 分类器（Training a Softmax classifier）"></a>3.9 训练一个 Softmax 分类器（Training a Softmax classifier）</h1><ul><li>怎样训练带有Softmax输出层的神经网络，具体而言，我们先定义训练神经网络使会用到的损失函数。</li></ul><p>$$<br>L(\hat y, y) = -\sum^C_{j=1}y_jlog\hat y_j<br>$$<br>概括来讲，损失函数所做的就是它找到你的训练集中的真实类别，然后试图使该类别相应的概率尽可能地高，如果你熟悉统计学中最大似然估计，这其实就是最大似然估计的一种形式。</p><ul><li>这是单个训练样本的损失，整个训练集的损失J又如何呢？</li></ul><p>$$<br>J = \frac{1}{m}\sum^m_{i=1}L(\hat y, y)<br>$$<br>因此你要做的就是用梯度下降法，使这里的损失最小化。</p><ul><li>最后我们来看一下，在有Softmax输出层时如何实现梯度下降法</li></ul><p>多分类的 Softmax 回归模型与二分类的 Logistic 回归模型只有输出层上有一点区别。经过不太一样的推导过程，仍有</p><p>$$<br>dZ^{[L]} = A^{[L]} - Y<br>$$<br>反向传播过程的其他步骤也和 Logistic 回归的一致。</p><p>详细可参考：<a href="http://ufldl.stanford.edu/wiki/index.php/Softmax%E5%9B%9E%E5%BD%92" target="_blank" rel="noopener">softmax 回归</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3-8-Softmax-回归（Softmax-regression）&quot;&gt;&lt;a href=&quot;#3-8-Softmax-回归（Softmax-regression）&quot; class=&quot;headerlink&quot; title=&quot;3.8 Softmax 回归（Softmax r
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>归一化网络的激活函数（Normalizing activations in a network）-吴恩达 深度学习 course2 3.4~3.7笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-12-course2-Week3-4-Normalizing%20activations%20in%20a%20network.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-12-course2-Week3-4-Normalizing%20activations%20in%20a%20network.html</id>
    <published>2018-05-12T11:51:31.000Z</published>
    <updated>2019-11-08T12:50:25.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-4-归一化网络的激活函数（Normalizing-activations-in-a-network）"><a href="#3-4-归一化网络的激活函数（Normalizing-activations-in-a-network）" class="headerlink" title="3.4 归一化网络的激活函数（Normalizing activations in a network）"></a>3.4 归一化网络的激活函数（Normalizing activations in a network）</h1><p>在深度学习兴起后，最重要的一个思想是它的一种算法，叫做Batch归一化。</p><p><strong>Batch归一化</strong>（Batch Normalization，经常简称为 BN）会使你的参数搜索问题变得很容易，使神经网络对超参数的选择更加稳定，超参数的范围会更加庞大，工作效果也很好，也会是你的训练更加容易，甚至是深层网络。</p><p>之前，我们对输入特征 X 使用了标准化处理。我们也可以用同样的思路处理隐藏层的激活值 a[l]，以加速 W[l+1]和 b[l+1]的训练。在实践中，经常选择标准化 Z[l]：</p><p>$$<br>\mu = \frac{1}{m} \sum_i z^{(i)}<br>$$</p><p>$$<br>\sigma^2 = \frac{1}{m} \sum_i {(z_i - \mu)}^2<br>$$</p><p>$$<br>z_{norm}^{(i)} = \frac{z^{(i)} - \mu}{\sqrt{\sigma^2 + \epsilon}}<br>$$</p><p>其中，m 是单个 mini-batch 所包含的样本个数，ϵ 是为了防止分母为零，通常取 10−8。</p><p>这样，我们使得所有的输入 z(i)均值为 0，方差为 1。但我们不想让隐藏层单元总是含有平均值 0 和方差 1，也许隐藏层单元有了不同的分布会更有意义。因此，我们计算</p><p>$$<br>\tilde z^{(i)} = \gamma z^{(i)}_{norm} + \beta<br>$$</p><p>其中，γ 和 β 都是模型的学习参数，所以可以用各种梯度下降算法来更新 γ 和 β 的值，如同更新神经网络的权重一样。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/Batch%20Normalization.png" alt="batch normalization"></p><p>通过对 γ 和 β 的合理设置，可以让<br>$$<br>\tilde z^{(i)}<br>$$<br>的均值和方差为任意值。这样，我们对隐藏层的 z^(i)进行标准化处理，用得到的<br>$$<br>\tilde z^{(i)}<br>$$<br>替代 z(i)。</p><p>设置 γ 和 β 的原因是，如果各隐藏层的输入均值在靠近 0 的区域，即处于激活函数的线性区域，不利于训练非线性神经网络，从而得到效果较差的模型。因此，需要用 γ 和 β 对标准化后的结果做进一步处理。</p><h1 id="3-5-将-Batch-Norm-拟合进神经网络（Fitting-Batch-Norm-into-a-neural-network）"><a href="#3-5-将-Batch-Norm-拟合进神经网络（Fitting-Batch-Norm-into-a-neural-network）" class="headerlink" title="3.5 将 Batch Norm 拟合进神经网络（Fitting Batch Norm into a neural network）"></a>3.5 将 Batch Norm 拟合进神经网络（Fitting Batch Norm into a neural network）</h1><p>对于 L 层神经网络，经过 Batch Normalization 的作用，整体流程如下：</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/adding%20batch%20norm%20to%20a%20network.png" alt="adding batch norm to a network"></p><p>实际上，Batch Normalization 经常使用在 mini-batch 上，这也是其名称的由来。</p><p>使用 Batch Normalization 时，因为标准化处理中包含减去均值的一步，因此 b 实际上没有起到作用，其数值效果交由 β 来实现。因此，在 Batch Normalization 中，可以省略 b 或者暂时设置为 0。</p><p>在使用梯度下降算法时，分别对 W[l]，β[l]和 γ[l]进行迭代更新。除了传统的梯度下降算法之外，还可以使用之前学过的动量梯度下降、RMSProp 或者 Adam 等优化算法。</p><h1 id="3-6-Batch-Norm-为什么奏效？（Why-does-Batch-Norm-work-）"><a href="#3-6-Batch-Norm-为什么奏效？（Why-does-Batch-Norm-work-）" class="headerlink" title="3.6 Batch Norm 为什么奏效？（Why does Batch Norm work?）"></a>3.6 Batch Norm 为什么奏效？（Why does Batch Norm work?）</h1><p>Batch Normalization 效果很好的原因有以下两点：</p><ul><li>通过对隐藏层各神经元的输入做类似的标准化处理，提高神经网络训练速度；</li><li>可以使前面层的权重变化对后面层造成的影响减小，整体网络更加健壮。</li></ul><p>关于第二点，如果实际应用样本和训练样本的数据分布不同（例如，橘猫图片和黑猫图片），我们称发生了“<strong>Covariate Shift</strong>”。这种情况下，一般要对模型进行重新训练。Batch Normalization 的作用就是减小 Covariate Shift 所带来的影响，让模型变得更加健壮，鲁棒性（Robustness）更强。</p><p>即使输入的值改变了，由于 Batch Normalization 的作用，使得均值和方差保持不变（由 γ 和 β 决定），限制了在前层的参数更新对数值分布的影响程度，因此后层的学习变得更容易一些。Batch Normalization 减少了各层 W 和 b 之间的耦合性，让各层更加独立，实现自我训练学习的效果。</p><p>另外，<strong>Batch Normalization 也起到微弱的正则化（regularization）效果</strong>。因为在每个 mini-batch 而非整个数据集上计算均值和方差，只由这一小部分数据估计得出的均值和方差会有一些噪声，因此最终计算出的 z~(i)也有一定噪声。类似于 dropout，这种噪声会使得神经元不会再特别依赖于任何一个输入特征。</p><p>因为 Batch Normalization 只有微弱的正则化效果，因此可以和 dropout 一起使用，以获得更强大的正则化效果。通过应用更大的 mini-batch 大小，可以减少噪声，从而减少这种正则化效果。</p><p>最后，不要将 Batch Normalization 作为正则化的手段，而是当作加速学习的方式。正则化只是一种非期望的副作用，Batch Normalization 解决的还是反向传播过程中的梯度问题（梯度消失和爆炸）。</p><h1 id="3-7-测试时的-Batch-Norm（Batch-Norm-at-test-time）"><a href="#3-7-测试时的-Batch-Norm（Batch-Norm-at-test-time）" class="headerlink" title="3.7 测试时的 Batch Norm（Batch Norm at test time）"></a>3.7 测试时的 Batch Norm（Batch Norm at test time）</h1><p>在训练时， μ 和 σ2是在整个mini-batch上计算出来的.包含了像是64或28或其它一定数量的样本</p><p>但在测试时，你可能需要逐一处理样本，方法是根据你的训练集估算和，估算的方式有很多种，理论上你可以在最终的网络中运行整个训练集来得到 μ 和 σ2</p><p>但在实际操作中，我们通常运用指数加权平均来追踪在训练过程中你看到的 μ 和 σ2的值。还可以用指数加权平均，有时也叫做流动平均来粗略估算 μ 和 σ2，然后在测试中使用和的值来进行你所需要的隐藏单元值的调整。</p><p>对于第 l 层隐藏层，考虑所有 mini-batch 在该隐藏层下的 μ[l]和 σ2[l]，然后用指数加权平均的方式来预测得到当前单个样本的 μ[l]和 σ2[l]。这样就实现了对测试过程单个样本的均值和方差估计。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3-4-归一化网络的激活函数（Normalizing-activations-in-a-network）&quot;&gt;&lt;a href=&quot;#3-4-归一化网络的激活函数（Normalizing-activations-in-a-network）&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>调试处理（Tuning process）-吴恩达 深度学习 course2 3.1~3.3笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-08-course2-Week3-1-Tuning%20process.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-08-course2-Week3-1-Tuning%20process.html</id>
    <published>2018-05-08T02:31:30.000Z</published>
    <updated>2019-11-08T12:50:25.597Z</updated>
    
    <content type="html"><![CDATA[<p>对于超参数而言，如何找到一套好的设定呢？本课中，我将和你分享一些指导原则，一些关于如何系统地组织超参调试过程的技巧。</p><h1 id="调试处理（Tuning-process）"><a href="#调试处理（Tuning-process）" class="headerlink" title="调试处理（Tuning process）"></a>调试处理（Tuning process）</h1><h2 id="参数的重要程度排序"><a href="#参数的重要程度排序" class="headerlink" title="参数的重要程度排序"></a>参数的重要程度排序</h2><p>关于训练深度最难的事情之一是你要处理的参数的数量，从学习速率 α 到Momentum（动量梯度下降法）的参数 β 。如果使用Momentum或Adam优化算法的参数 β1，β2和 ε，也许你还得选择层数，也许你还得选择不同层中隐藏单元的数量，也许你还想使用学习率衰减。所以，你使用的不是单一的学习率α。接着，当然你可能还需要选择mini-batch的大小。</p><p>结果证实一些超参数比其它的更为重要。</p><h3 id="最重要"><a href="#最重要" class="headerlink" title="最重要"></a>最重要</h3><ul><li>学习速率 α；</li></ul><h3 id="其次重要"><a href="#其次重要" class="headerlink" title="其次重要"></a>其次重要</h3><ul><li><p>β：动量衰减参数，常设置为 0.9；</p></li><li><p>#hidden units：各隐藏层神经元个数；</p></li><li><p>mini-batch 的大小；</p></li></ul><h3 id="重要性排第三位"><a href="#重要性排第三位" class="headerlink" title="重要性排第三位"></a>重要性排第三位</h3><ul><li><p>β1，β2，ϵ：Adam 优化算法的超参数，常设为 0.9、0.999、10−8；</p></li><li><p>#layers：神经网络层数;</p></li><li><p>decay_rate：学习衰减率；</p><pre><code>![hyperparameters](https://raw.githubusercontent.com/songapore/For-PicGo/master/img/hyperparameters.png)</code></pre></li></ul><p>希望你粗略了解到哪些超参数较为重要，α无疑是最重要的，接下来是我用橙色圈住的那些，然后是我用紫色圈住的那些，但这不是严格且快速的标准，我认为，其它深度学习的研究者可能会很不同意我的观点或有着不同的直觉。</p><h2 id="调参技巧"><a href="#调参技巧" class="headerlink" title="调参技巧"></a>调参技巧</h2><h3 id="随机选择点"><a href="#随机选择点" class="headerlink" title="随机选择点"></a>随机选择点</h3><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/try%20random%20values.png" alt="try random values:don&#39;t use a grid"></p><p>现在，如果你尝试调整一些超参数，该如何选择调试值呢？在早一代的机器学习算法中，如果你有两个超参数，这里我会称之为超参1，超参2，常见的做法是在网格中取样点，像这样，然后系统的研究这些数值。这里我放置的是5×5的网格，实践证明，网格可以是5×5，也可多可少，但对于这个例子，你可以尝试这所有的25个点，然后选择哪个参数效果最好。<strong>当参数的数量相对较少时，这个方法很实用。</strong></p><p><strong>在深度学习领域，我推荐你采用随机选择点</strong>，你可以选择同等数量的点，25个点，接着，用这些随机取的点试验超参数的效果。之所以这么做是因为，对于你要解决的问题而言，你很难提前知道哪个超参数最重要，正如你之前看到的，一些超参数的确要比其它的更重要。</p><p>举个例子，假设超参数1是α（学习速率），取一个极端的例子，假设超参数2是Adam算法中，分母中的ε。在这种情况下，α的取值很重要，而ε取值则无关紧要。如果你在网格中取点，接着，你试验了αα的5个取值，那你会发现，无论ε取何值，结果基本上都是一样的。所以，你知道共有25种模型，但进行试验的α值只有5个，我认为这是很重要的。</p><p>对比而言，如果你随机取值，你会试验25个独立的，似乎你更有可能发现效果做好的那个。</p><p>实践中，哪个是最重要的超参数，对于你的具体应用而言，随机取值而不是网格取值表明，你探究了更多重要超参数的潜在值，无论结果是什么。</p><h3 id="由粗糙到精细的策略"><a href="#由粗糙到精细的策略" class="headerlink" title="由粗糙到精细的策略"></a>由粗糙到精细的策略</h3><p>当你给超参数取值时，另一个惯例是采用 <strong>由粗糙到精细的策略 :聚焦效果不错的点组成的小区域，在其中更密集地取值，以此类推</strong></p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/coarse%20to%20fine.png" alt="coarse to fine"></p><p>比如在二维的那个例子中，你进行了取值，也许你会发现效果最好的某个点，也许这个点周围的其他一些点效果也很好，那在接下来要做的是放大这块小区域（小蓝色方框内），然后在其中更密集得取值或随机取值，聚集更多的资源，在这个蓝色的方格中搜索，如果你怀疑这些超参数在这个区域的最优结果，那在整个的方格中进行粗略搜索后，你会知道接下来应该聚焦到更小的方格中。在更小的方格中，你可以更密集得取点。所以这种从粗到细的搜索也经常使用。</p><p>通过试验超参数的不同取值，你可以选择对训练集目标而言的最优值，或对于开发集而言的最优值，或在超参搜索过程中你最想优化的东西。</p><p>我希望，这能给你提供一种方法去系统地组织超参数搜索过程。另一个关键点是随机取值和精确搜索，考虑使用由粗糙到精细的搜索过程。</p><h1 id="3-2为超参数选择合适的范围（Using-an-appropriate-scale-to-pick-hyperparameters）"><a href="#3-2为超参数选择合适的范围（Using-an-appropriate-scale-to-pick-hyperparameters）" class="headerlink" title="3.2为超参数选择合适的范围（Using an appropriate scale to pick hyperparameters）"></a>3.2为超参数选择合适的范围（Using an appropriate scale to pick hyperparameters）</h1><p>在上一课中，你已经看到了在超参数范围中，随机取值可以提升你的搜索效率。但随机取值并不是在有效范围内的随机均匀取值，而是选择合适的标尺，用于探究这些超参数。</p><ul><li>对于学习率 α，用对数标尺而非线性轴的方式搜索超参数更加合理：0.0001、0.001、0.01、0.1 等，然后在这些刻度之间再随机均匀取值；</li><li>对于 β，取 0.9 就相当于在 10 个值中计算平均值，而取 0.999 就相当于在 1000 个值中计算平均值。可以考虑给 1-β 取值，这样就和取学习率类似了。</li></ul><p>上述操作的原因是当 β 接近 1 时，即使 β 只有微小的改变，所得结果的灵敏度会有较大的变化。例如，β 从 0.9 增加到 0.9005 对结果（1/(1-β)）几乎没有影响，而 β 从 0.999 到 0.9995 对结果的影响巨大（从 1000 个值中计算平均值变为 2000 个值中计算平均值）。</p><h1 id="3-3-超参数训练的实践：Pandas-VS-Caviar（Hyperparameters-tuning-in-practice-Pandas-vs-Caviar）"><a href="#3-3-超参数训练的实践：Pandas-VS-Caviar（Hyperparameters-tuning-in-practice-Pandas-vs-Caviar）" class="headerlink" title="3.3 超参数训练的实践：Pandas VS Caviar（Hyperparameters tuning in practice: Pandas vs. Caviar）"></a>3.3 超参数训练的实践：Pandas VS Caviar（Hyperparameters tuning in practice: Pandas vs. Caviar）</h1><ul><li><p>深度学习如今已经应用到许多不同的领域。不同的应用出现相互交融的现象，某个应用领域的超参数设定有可能通用于另一领域。不同应用领域的人也应该更多地阅读其他研究领域的 paper，跨领域地寻找灵感；</p></li><li><p>考虑到数据的变化或者服务器的变更等因素，建议每隔几个月至少一次，重新测试或评估超参数，来获得实时的最佳模型；</p></li><li><p>根据你所拥有的计算资源来决定你训练模型的方式：</p></li></ul><ol><li>Panda（熊猫方式）：在在线广告设置或者在计算机视觉应用领域有大量的数据，但受计算能力所限，同时试验大量模型比较困难。可以采用这种方式：试验一个或一小批模型，初始化，试着让其工作运转，观察它的表现，不断调整参数；</li><li>Caviar（鱼子酱方式）：拥有足够的计算机去平行试验很多模型，尝试很多不同的超参数，选取效果最好的模型；</li></ol><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/Hyperparameters%20tuning%20in%20practice.png" alt="hpyerparameters tuning in practice"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于超参数而言，如何找到一套好的设定呢？本课中，我将和你分享一些指导原则，一些关于如何系统地组织超参调试过程的技巧。&lt;/p&gt;
&lt;h1 id=&quot;调试处理（Tuning-process）&quot;&gt;&lt;a href=&quot;#调试处理（Tuning-process）&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>局部最优的问题(The problem of local optima)-吴恩达 深度学习 course2 2.10笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-07-course2-Week2-10-The%20problem%20of%20local%20optima.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-07-course2-Week2-10-The%20problem%20of%20local%20optima.html</id>
    <published>2018-05-07T06:58:30.000Z</published>
    <updated>2019-11-08T12:50:25.593Z</updated>
    
    <content type="html"><![CDATA[<p>在深度学习研究早期，人们总是担心优化算法会困在极差的局部最优，不过随着深度学习理论不断发展，我们对局部最优的理解也发生了改变。我向你展示一下现在我们怎么看待局部最优以及深度学习中的优化问题。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/the%20problem%20of%20local%20optima.png" alt="The problem of local optima"></p><p>这是曾经人们在想到局部最优时脑海里会出现的图，也许你想优化一些参数，我们把它们称之为W1和W2，平面的高度就是损失函数。在图中似乎各处都分布着局部最优。梯度下降法或者某个算法可能困在一个局部最优中，而不会抵达全局最优。如果你要作图计算一个数字，比如说这两个维度，就容易出现有多个不同局部最优的图，而这些低维的图曾经影响了我们的理解，但是这些理解并不正确。</p><p>事实上，如果你要创建一个神经网络，通常梯度为零的点并不是这个图中的局部最优点，实际上成本函数的零梯度点，通常是鞍点。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/saddle.png" alt="saddle"></p><p>所以我们从深度学习历史中学到的一课就是，我们对低维度空间的大部分直觉，比如你可以画出上面的图，并不能应用到高维度空间中。适用于其它算法，因为如果你有2万个参数，那么函数有2万个维度向量，你更可能遇到鞍点，而不是局部最优点。</p><p>鞍点（saddle）是函数上的导数为零，但不是轴上局部极值的点。当我们建立一个神经网络时，通常梯度为零的点是上图所示的鞍点，而非局部最小值。减少损失的难度也来自误差曲面中的鞍点，而不是局部最低点。因为在一个具有高维度空间的成本函数中，如果梯度为 0，那么在每个方向，成本函数或是凸函数，或是凹函数。而所有维度均需要是凹函数的概率极小，因此在低维度的局部最优点的情况并不适用于高维度。</p><p>结论：</p><ul><li>在训练较大的神经网络、存在大量参数，并且成本函数被定义在较高的维度空间时，困在极差的局部最优中是不大可能的；</li><li>鞍点附近的平稳段会使得学习非常缓慢，而这也是动量梯度下降法、RMSProp 以及 Adam 优化算法能够加速学习的原因，它们能帮助尽早走出平稳段。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在深度学习研究早期，人们总是担心优化算法会困在极差的局部最优，不过随着深度学习理论不断发展，我们对局部最优的理解也发生了改变。我向你展示一下现在我们怎么看待局部最优以及深度学习中的优化问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubuserco
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>学习率衰减(Learning rate decay)-吴恩达 深度学习 course2 2.9笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-06-course2-Week2-9-Learning%20rate%20decay.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-06-course2-Week2-9-Learning%20rate%20decay.html</id>
    <published>2018-05-06T06:30:10.000Z</published>
    <updated>2019-11-08T12:50:25.599Z</updated>
    
    <content type="html"><![CDATA[<p>加快学习算法的一个办法就是随时间慢慢减少学习率，我们将之称为<strong>学习率衰减</strong>，我们来看看如何做到。</p><h2 id="为什么要计算学习率衰减"><a href="#为什么要计算学习率衰减" class="headerlink" title="为什么要计算学习率衰减"></a>为什么要计算学习率衰减</h2><p>假设你要使用mini-batch梯度下降法，mini-batch数量不大，大概64或者128个样本，在迭代过程中会有噪音（蓝色线），下降朝向这里的最小值，但是不会精确地收敛，所以你的算法最后在附近摆动，并不会真正收敛，因为你用的α是固定值，不同的mini-batch中有噪音。</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/why%20computer%20learning%20rate%20decay.png" alt="image"></p><p>但要慢慢减少学习率α的话，在初期的时候，学习率α还较大，你的学习还是相对较快，但随着α变小，你的步伐也会变慢变小，所以最后你的曲线（绿色线）会在最小值附近的一小块区域里摆动，而不是在训练过程中，大幅度在最小值附近摆动。</p><p>所以慢慢减少的本质在于，在学习初期，你能承受较大的步伐，但当开始收敛的时候，小一些的学习率能让你步伐小一些。</p><h2 id="最常用的学习率衰减方法："><a href="#最常用的学习率衰减方法：" class="headerlink" title="最常用的学习率衰减方法："></a>最常用的学习率衰减方法：</h2><p>$$<br>\alpha = \frac{1}{1 + decay_rate <em> epoch_num} </em> \alpha_0<br>$$<br>其中，decay_rate为衰减率（超参数），epoch_num为将所有的训练样本完整过一遍的次数。注意这个衰减率是另一个你需要调整的超参数</p><p>要理解，作为代数函数，根据上述公式，你的学习率呈递减趋势。如果你想用学习率衰减，要做的是要去尝试不同的值，找到合适的值，除了这个学习率衰减的公式，人们还会用其它的公式。</p><h2 id="其它的学习率衰减方法"><a href="#其它的学习率衰减方法" class="headerlink" title="其它的学习率衰减方法"></a>其它的学习率衰减方法</h2><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/Other%20learning%20rate%20decay%20methods.png" alt="other learning rate decay methods"></p><ul><li>指数衰减：</li></ul><p>$$<br>\alpha = 0.95^{epoch_num} * \alpha_0<br>$$</p><ul><li>其他：</li></ul><p>$$<br>\alpha = \frac{k}{\sqrt{epoch_num}} * \alpha_0<br>$$</p><ul><li>离散下降</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;加快学习算法的一个办法就是随时间慢慢减少学习率，我们将之称为&lt;strong&gt;学习率衰减&lt;/strong&gt;，我们来看看如何做到。&lt;/p&gt;
&lt;h2 id=&quot;为什么要计算学习率衰减&quot;&gt;&lt;a href=&quot;#为什么要计算学习率衰减&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>Adam 优化算法(Adam optimization algorithm)-吴恩达 深度学习 course2 2.8笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-05-02-course2-Week2-8-Adam%20optimization%20algorithm.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-05-02-course2-Week2-8-Adam%20optimization%20algorithm.html</id>
    <published>2018-05-02T09:20:10.000Z</published>
    <updated>2019-11-08T12:50:25.607Z</updated>
    
    <content type="html"><![CDATA[<p>在深度学习的历史上，包括许多知名研究者在内，提出了优化算法，并很好地解决了一些问题，但随后这些优化算法被指出并不能一般化，并不适用于多种神经网络。</p><p>RMSprop以及Adam优化算法，就是少有的经受住人们考验的两种算法，已被证明适用于不同的深度学习结构，这个算法我会毫不犹豫地推荐给你，因为很多人都试过，并且用它很好地解决了许多问题。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><strong>Adam 优化算法</strong>（Adaptive Moment Estimation，自适应矩估计）基本上就是将 Momentum 和 RMSProp 算法结合在一起，通常有超越二者单独时的效果。那么来看看如何使用Adam算法</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/Adam%20optimization%20algorithm.png" alt="Adam optimization algorithm"></p><p>使用Adam算法，首先你要初始化：</p><p>$$<br>v_{dW} = 0, s_{dW} = 0, v_{db} = 0, s_{db} = 0<br>$$</p><p>用每一个 mini-batch 计算 dW、db，第 t 次迭代时</p><p>$$<br>v_{dW} = \beta_1 v_{dW} + (1 - \beta_1) dW<br>$$</p><p>$$<br>v_{db} = \beta_1 v_{db} + (1 - \beta_1) db<br>$$</p><p>$$<br>s_{dW} = \beta_2 s_{dW} + (1 - \beta_2) {(dW)}^2<br>$$</p><p>$$<br>s_{db} = \beta_2 s_{db} + (1 - \beta_2) {(db)}^2<br>$$</p><p>一般使用 Adam 算法时需要计算偏差修正：</p><p>$$<br>v^{corrected}<em>{dW} = \frac{v</em>{dW}}{1-{\beta_1}^t}<br>$$</p><p>$$<br>v^{corrected}<em>{db} = \frac{v</em>{db}}{1-{\beta_1}^t}<br>$$</p><p>$$<br>s^{corrected}<em>{dW} = \frac{s</em>{dW}}{1-{\beta_2}^t}<br>$$</p><p>$$<br>s^{corrected}<em>{db} = \frac{s</em>{db}}{1-{\beta_2}^t}<br>$$</p><p>所以，更新 W、b 时有：</p><p>$$<br>W := W - \alpha \frac{v^{corrected}<em>{dW}}{\sqrt{s^{corrected}</em>{dW}} + \epsilon}<br>$$</p><p>$$<br>b := b - \alpha \frac{v^{corrected}<em>{db}}{\sqrt{s^{corrected}</em>{db}} + \epsilon}<br>$$</p><p>（可以看到 Andrew 在这里 ϵ 没有写到平方根里去，和他在 RMSProp 中写的不太一样。考虑到 ϵ 所起的作用，我感觉影响不大）</p><h2 id="超参数选择"><a href="#超参数选择" class="headerlink" title="超参数选择"></a>超参数选择</h2><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/hyperparameters%20choice.png" alt="超参数选择"></p><p>Adam 优化算法有很多的超参数，其中</p><ul><li>学习率 α：需要尝试一系列的值，来寻找比较合适的；</li><li>β1：常用的缺省值为 0.9；</li><li>β2：Adam 算法的作者建议为 0.999；</li><li>ϵ：不重要，不会影响算法表现，Adam 算法的作者建议为 10−8；</li></ul><p>β1、β2、ϵ 通常不需要调试。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在深度学习的历史上，包括许多知名研究者在内，提出了优化算法，并很好地解决了一些问题，但随后这些优化算法被指出并不能一般化，并不适用于多种神经网络。&lt;/p&gt;
&lt;p&gt;RMSprop以及Adam优化算法，就是少有的经受住人们考验的两种算法，已被证明适用于不同的深度学习结构，这个算
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>RMSprop算法-吴恩达 深度学习 course2 2.7笔记</title>
    <link href="https://songjiapo.com/DeepLearning/2018-04-30-course2-Week2-7-RMSProp.html"/>
    <id>https://songjiapo.com/DeepLearning/2018-04-30-course2-Week2-7-RMSProp.html</id>
    <published>2018-04-30T04:40:12.000Z</published>
    <updated>2019-11-08T12:50:25.613Z</updated>
    
    <content type="html"><![CDATA[<p>你们知道了动量（Momentum）可以加快梯度下降，还有一个叫做RMSprop的算法，全称是root mean square prop算法，它也可以加速梯度下降，我们来看看它是如何运作的。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>RMSProp</strong>算法是<strong>在对梯度进行指数加权平均的基础上，引入平方和平方根</strong>。</p><p>如果你执行梯度下降，虽然横轴方向正在推进，但纵轴方向会有大幅度摆动，为了分析这个例子，假设纵轴代表参数b，横轴代表参数W.</p><p>所以，你想减缓 纵轴方向的学习，同时加快 横轴方向的学习，RMSprop算法可以实现这一点</p><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/RMSProp.png" alt="RMSProp 算法"></p><p>我们来理解一下其原理。我们希望W学习速度快，而在垂直方向，也就是例子中的b方向，我们希望减缓纵轴上的摆动，所以有了和S_dw, S_db<br>.</p><p>我们希望S_dw会相对较小，所以我们要除以一个较小的数，而希望S_db又较大，所以这里我们要除以较大的数字，这样就可以减缓纵轴上的变化。</p><p>因为函数的倾斜程度，在纵轴上，也就是b方向上要大于在横轴上，也就是W方向上。db的平方较大，所以S_db也会较大，而相比之下，dw会小一些，亦或平方会小一些，因此S_dw会小一些，结果就是纵轴上的更新要被一个较大的数相除，就能消除摆动，而水平方向的更新则被较小的数相除。</p><p>RMSprop的影响就是你的更新最后会变成这样（绿色线），纵轴方向上摆动较小，而横轴方向继续推进。还有个影响就是，你可以用一个更大学习率，然后加快学习，而无须在纵轴上垂直方向偏离。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="https://raw.githubusercontent.com/songapore/For-PicGo/master/img/RMSProp%20%281%29.png" alt="RMSProp 算法"><br>$$<br>s_{dw} = \beta s_{dw} + (1 - \beta)(dw)^2<br>$$</p><p>$$<br>s_{db} = \beta s_{db} + (1 - \beta)(db)^2<br>$$</p><p>$$<br>w := w - \alpha \frac{dw}{\sqrt{s_{dw} + \epsilon}}<br>$$</p><p>$$<br>b := b - \alpha \frac{db}{\sqrt{s_{db} + \epsilon}}<br>$$</p><p>如果的平方根趋近于0怎么办？得到的答案就非常大，为了确保数值稳定，在实际中，你要在分母上加上一个很小很小的ϵ，是多少没关系，10^-8<br>是个不错的选择，这只是保证数值能稳定一些。</p><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>所以RMSprop跟Momentum有很相似的一点，可以消除梯度下降中的摆动，包括mini-batch梯度下降，并允许你使用一个更大的学习率，从而加快你的算法学习速度。</p><p>所以你学会了如何运用RMSprop，这是给学习算法加速的另一方法。关于RMSprop的一个有趣的事是，它首次提出并不是在学术研究论文中，而是在多年前Jeff Hinton在Coursera的课程上。我想Coursera并不是故意打算成为一个传播新兴的学术研究的平台，但是却达到了意想不到的效果。就是从Coursera课程开始，RMSprop开始被人们广为熟知，并且发展迅猛。</p><p>我们讲过了Momentum，我们讲了RMSprop，如果二者结合起来，你会得到一个更好的优化算法，在下个视频中我们再好好讲一讲为什么。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你们知道了动量（Momentum）可以加快梯度下降，还有一个叫做RMSprop的算法，全称是root mean square prop算法，它也可以加速梯度下降，我们来看看它是如何运作的。&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="DeepLearning" scheme="https://songjiapo.com/categories/DeepLearning/"/>
    
    
      <category term="DeepLearning 吴恩达" scheme="https://songjiapo.com/tags/DeepLearning-%E5%90%B4%E6%81%A9%E8%BE%BE/"/>
    
  </entry>
  
</feed>
